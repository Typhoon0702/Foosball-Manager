{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../crud.service\";\nimport * as i2 from \"../auth-service.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../snackbar.service\";\nexport class TeammanagerComponent {\n  constructor(crud, auth, route, router, fb, _snackBar) {\n    this.crud = crud;\n    this.auth = auth;\n    this.route = route;\n    this.router = router;\n    this.fb = fb;\n    this._snackBar = _snackBar;\n    this.teamForm = fb.group({\n      Name: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      this.tournamentId = params.tournament;\n      this.teamId = params.team;\n    });\n    this.crud.getTournamentDetail(this.tournamentId).subscribe(data => {\n      if (data.payload.exists) {\n        let f = {\n          id: data.payload.id,\n          name: data.payload.data()[\"name\"],\n          teams: data.payload.data()[\"teams\"],\n          matches: data.payload.data()[\"matches\"],\n          users: data.payload.data()[\"users\"],\n          type: data.payload.data()[\"type\"],\n          admin: data.payload.data()[\"admin\"],\n          brackets: data.payload.data()[\"brackets\"]\n        };\n        this.tournament = f;\n        this.team = this.tournament.teams.find(t => t.id == this.teamId);\n        this.teamId = this.team.id;\n        this.teamName = this.team.name;\n        var brackets = {\n          rounds: []\n        };\n        this.tournament.brackets = this.tournament.brackets == null ? brackets : this.tournament.brackets;\n      } else {\n        this.router.navigate(['/404']);\n      }\n    });\n  }\n  updateTeam() {\n    let updatedTeam = this.tournament.teams.find(t => t.id == this.teamId);\n    var i = this.tournament.teams.indexOf(updatedTeam);\n    this.tournament.teams[i].name = this.teamName;\n    this.crud.addInfoToTournament(this.tournament).then(resp => {\n      this._snackBar.show('⚽ Team update successfully.');\n    }).catch(error => {\n      this._snackBar.show('⚠️ Error: ' + error);\n    });\n    this.router.navigate(['tournament'], {\n      queryParams: {\n        id: this.tournament.id\n      }\n    });\n  }\n  static {\n    this.ɵfac = function TeammanagerComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TeammanagerComponent)(i0.ɵɵdirectiveInject(i1.CrudService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i5.PopupService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TeammanagerComponent,\n      selectors: [[\"app-teammanager\"]],\n      decls: 11,\n      vars: 2,\n      consts: [[1, \"container\"], [2, \"width\", \"100%\", 3, \"formGroup\"], [1, \"form-row\", \"justify-content-center\"], [1, \"form-group\", \"col-lg-6\", \"col-md-6\", \"col-sm-12\", \"col-xs-12\"], [\"for\", \"inputAddress\"], [\"type\", \"text\", \"id\", \"inputAddress\", \"formControlName\", \"Name\", \"mdbInputDirective\", \"\", \"placeholder\", \"Foosball Champions\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [1, \"btn\", \"btn-dark\", 3, \"click\"]],\n      template: function TeammanagerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"label\", 4);\n          i0.ɵɵtext(5, \"*Team name:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"input\", 5);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function TeammanagerComponent_Template_input_ngModelChange_6_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.teamName, $event) || (ctx.teamName = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(7, \"div\", 2)(8, \"div\", 3)(9, \"a\", 6);\n          i0.ɵɵlistener(\"click\", function TeammanagerComponent_Template_a_click_9_listener() {\n            return ctx.updateTeam();\n          });\n          i0.ɵɵtext(10, \"Update\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"formGroup\", ctx.teamForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.teamName);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["Validators","TeammanagerComponent","constructor","crud","auth","route","router","fb","_snackBar","teamForm","group","Name","required","ngOnInit","queryParams","subscribe","params","tournamentId","tournament","teamId","team","getTournamentDetail","data","payload","exists","f","id","name","teams","matches","users","type","admin","brackets","find","t","teamName","rounds","navigate","updateTeam","updatedTeam","i","indexOf","addInfoToTournament","then","resp","show","catch","error","i0","ɵɵdirectiveInject","i1","CrudService","i2","AuthService","i3","ActivatedRoute","Router","i4","FormBuilder","i5","PopupService","selectors","decls","vars","consts","template","TeammanagerComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtwoWayListener","TeammanagerComponent_Template_input_ngModelChange_6_listener","$event","ɵɵtwoWayBindingSet","ɵɵlistener","TeammanagerComponent_Template_a_click_9_listener","ɵɵadvance","ɵɵproperty","ɵɵtwoWayProperty"],"sources":["D:\\Documents\\GitHub\\Foosball-Manager#\\src\\app\\teammanager\\teammanager.component.ts","D:\\Documents\\GitHub\\Foosball-Manager#\\src\\app\\teammanager\\teammanager.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CrudService } from '../crud.service';\r\nimport { AuthService } from '../auth-service.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { PopupService } from '../snackbar.service';\r\nimport { Tournament } from '../services/tournaments';\r\nimport { Team } from '../services/team';\r\nimport { Bracket } from '../services/brackets';\r\n\r\n@Component({\r\n  selector: 'app-teammanager',\r\n  templateUrl: './teammanager.component.html',\r\n  styleUrls: ['./teammanager.component.scss']\r\n})\r\nexport class TeammanagerComponent implements OnInit {\r\n\r\n  tournamentId: string;\r\n  tournament: Tournament;\r\n\r\n  teamId: string;\r\n  team: Team;\r\n  teamName: string;\r\n  teamForm: FormGroup;\r\n\r\n  constructor(public crud: CrudService, public auth: AuthService, private route: ActivatedRoute, private router: Router, public fb: FormBuilder, private _snackBar: PopupService) {\r\n    this.teamForm = fb.group({\r\n      Name: ['', Validators.required]\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams\r\n      .subscribe(params => {\r\n        this.tournamentId = params.tournament;\r\n        this.teamId = params.team;\r\n      });\r\n\r\n    this.crud.getTournamentDetail(this.tournamentId).subscribe(data => {\r\n      if (data.payload.exists) {\r\n        let f: Tournament = {\r\n          id: data.payload.id,\r\n          name: data.payload.data()[\"name\"],\r\n          teams: data.payload.data()[\"teams\"],\r\n          matches: data.payload.data()[\"matches\"],\r\n          users: data.payload.data()[\"users\"],\r\n          type: data.payload.data()[\"type\"],\r\n          admin: data.payload.data()[\"admin\"],\r\n          brackets: data.payload.data()[\"brackets\"],\r\n        };\r\n        this.tournament = f;\r\n\r\n        this.team = this.tournament.teams.find(t => t.id == this.teamId);\r\n        this.teamId = this.team.id;\r\n        this.teamName = this.team.name;\r\n        var brackets : Bracket = {\r\n          rounds: []\r\n        }\r\n\r\n        this.tournament.brackets = this.tournament.brackets == null ?  brackets : this.tournament.brackets;\r\n      }\r\n      else {\r\n        this.router.navigate(['/404']);\r\n      }\r\n    });\r\n  }\r\n\r\n  updateTeam() {\r\n    let updatedTeam = this.tournament.teams.find(t => t.id == this.teamId);\r\n    var i = this.tournament.teams.indexOf(updatedTeam);\r\n    this.tournament.teams[i].name = this.teamName;\r\n\r\n    this.crud.addInfoToTournament(this.tournament).then(resp => {\r\n      this._snackBar.show('⚽ Team update successfully.');\r\n    }).catch(error => {\r\n      this._snackBar.show('⚠️ Error: ' + error);\r\n    });\r\n    this.router.navigate(['tournament'], { queryParams: { id: this.tournament.id } });\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <form [formGroup]=\"teamForm\" style=\"width:100%;\">\r\n        <div class=\"form-row justify-content-center\">\r\n            <div class=\"form-group col-lg-6 col-md-6 col-sm-12 col-xs-12\">\r\n                <label for=\"inputAddress\">*Team name:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"inputAddress\" formControlName=\"Name\" mdbInputDirective\r\n                    placeholder=\"Foosball Champions\" [(ngModel)]=\"teamName\">\r\n            </div>\r\n        </div>\r\n        <div class=\"form-row justify-content-center\">\r\n            <div class=\"form-group col-lg-6 col-md-6 col-sm-12 col-xs-12\">\r\n                <a (click)=\"updateTeam()\" class=\"btn btn-dark\">Update</a>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>"],"mappings":"AAIA,SAAsBA,UAAU,QAAmB,gBAAgB;;;;;;;AAWnE,OAAM,MAAOC,oBAAoB;EAU/BC,YAAmBC,IAAiB,EAASC,IAAiB,EAAUC,KAAqB,EAAUC,MAAc,EAASC,EAAe,EAAUC,SAAuB;IAA3J,KAAAL,IAAI,GAAJA,IAAI;IAAsB,KAAAC,IAAI,GAAJA,IAAI;IAAuB,KAAAC,KAAK,GAALA,KAAK;IAA0B,KAAAC,MAAM,GAANA,MAAM;IAAiB,KAAAC,EAAE,GAAFA,EAAE;IAAuB,KAAAC,SAAS,GAATA,SAAS;IAC9J,IAAI,CAACC,QAAQ,GAAGF,EAAE,CAACG,KAAK,CAAC;MACvBC,IAAI,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACY,QAAQ;KAC/B,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACR,KAAK,CAACS,WAAW,CACnBC,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACC,YAAY,GAAGD,MAAM,CAACE,UAAU;MACrC,IAAI,CAACC,MAAM,GAAGH,MAAM,CAACI,IAAI;IAC3B,CAAC,CAAC;IAEJ,IAAI,CAACjB,IAAI,CAACkB,mBAAmB,CAAC,IAAI,CAACJ,YAAY,CAAC,CAACF,SAAS,CAACO,IAAI,IAAG;MAChE,IAAIA,IAAI,CAACC,OAAO,CAACC,MAAM,EAAE;QACvB,IAAIC,CAAC,GAAe;UAClBC,EAAE,EAAEJ,IAAI,CAACC,OAAO,CAACG,EAAE;UACnBC,IAAI,EAAEL,IAAI,CAACC,OAAO,CAACD,IAAI,EAAE,CAAC,MAAM,CAAC;UACjCM,KAAK,EAAEN,IAAI,CAACC,OAAO,CAACD,IAAI,EAAE,CAAC,OAAO,CAAC;UACnCO,OAAO,EAAEP,IAAI,CAACC,OAAO,CAACD,IAAI,EAAE,CAAC,SAAS,CAAC;UACvCQ,KAAK,EAAER,IAAI,CAACC,OAAO,CAACD,IAAI,EAAE,CAAC,OAAO,CAAC;UACnCS,IAAI,EAAET,IAAI,CAACC,OAAO,CAACD,IAAI,EAAE,CAAC,MAAM,CAAC;UACjCU,KAAK,EAAEV,IAAI,CAACC,OAAO,CAACD,IAAI,EAAE,CAAC,OAAO,CAAC;UACnCW,QAAQ,EAAEX,IAAI,CAACC,OAAO,CAACD,IAAI,EAAE,CAAC,UAAU;SACzC;QACD,IAAI,CAACJ,UAAU,GAAGO,CAAC;QAEnB,IAAI,CAACL,IAAI,GAAG,IAAI,CAACF,UAAU,CAACU,KAAK,CAACM,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACT,EAAE,IAAI,IAAI,CAACP,MAAM,CAAC;QAChE,IAAI,CAACA,MAAM,GAAG,IAAI,CAACC,IAAI,CAACM,EAAE;QAC1B,IAAI,CAACU,QAAQ,GAAG,IAAI,CAAChB,IAAI,CAACO,IAAI;QAC9B,IAAIM,QAAQ,GAAa;UACvBI,MAAM,EAAE;SACT;QAED,IAAI,CAACnB,UAAU,CAACe,QAAQ,GAAG,IAAI,CAACf,UAAU,CAACe,QAAQ,IAAI,IAAI,GAAIA,QAAQ,GAAG,IAAI,CAACf,UAAU,CAACe,QAAQ;MACpG,CAAC,MACI;QACH,IAAI,CAAC3B,MAAM,CAACgC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;MAChC;IACF,CAAC,CAAC;EACJ;EAEAC,UAAUA,CAAA;IACR,IAAIC,WAAW,GAAG,IAAI,CAACtB,UAAU,CAACU,KAAK,CAACM,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACT,EAAE,IAAI,IAAI,CAACP,MAAM,CAAC;IACtE,IAAIsB,CAAC,GAAG,IAAI,CAACvB,UAAU,CAACU,KAAK,CAACc,OAAO,CAACF,WAAW,CAAC;IAClD,IAAI,CAACtB,UAAU,CAACU,KAAK,CAACa,CAAC,CAAC,CAACd,IAAI,GAAG,IAAI,CAACS,QAAQ;IAE7C,IAAI,CAACjC,IAAI,CAACwC,mBAAmB,CAAC,IAAI,CAACzB,UAAU,CAAC,CAAC0B,IAAI,CAACC,IAAI,IAAG;MACzD,IAAI,CAACrC,SAAS,CAACsC,IAAI,CAAC,6BAA6B,CAAC;IACpD,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAG;MACf,IAAI,CAACxC,SAAS,CAACsC,IAAI,CAAC,YAAY,GAAGE,KAAK,CAAC;IAC3C,CAAC,CAAC;IACF,IAAI,CAAC1C,MAAM,CAACgC,QAAQ,CAAC,CAAC,YAAY,CAAC,EAAE;MAAExB,WAAW,EAAE;QAAEY,EAAE,EAAE,IAAI,CAACR,UAAU,CAACQ;MAAE;IAAE,CAAE,CAAC;EAEnF;;;uCAhEWzB,oBAAoB,EAAAgD,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,cAAA,GAAAP,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAE,MAAA,GAAAR,EAAA,CAAAC,iBAAA,CAAAQ,EAAA,CAAAC,WAAA,GAAAV,EAAA,CAAAC,iBAAA,CAAAU,EAAA,CAAAC,YAAA;IAAA;EAAA;;;YAApB5D,oBAAoB;MAAA6D,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCXjBnB,EAJhB,CAAAqB,cAAA,aAAuB,cAC8B,aACA,aACqB,eAChC;UAAArB,EAAA,CAAAsB,MAAA,kBAAW;UAAAtB,EAAA,CAAAuB,YAAA,EAAQ;UAC7CvB,EAAA,CAAAqB,cAAA,eAC4D;UAAvBrB,EAAA,CAAAwB,gBAAA,2BAAAC,6DAAAC,MAAA;YAAA1B,EAAA,CAAA2B,kBAAA,CAAAP,GAAA,CAAAjC,QAAA,EAAAuC,MAAA,MAAAN,GAAA,CAAAjC,QAAA,GAAAuC,MAAA;YAAA,OAAAA,MAAA;UAAA,EAAsB;UAEnE1B,EAHQ,CAAAuB,YAAA,EAC4D,EAC1D,EACJ;UAGEvB,EAFR,CAAAqB,cAAA,aAA6C,aACqB,WACX;UAA5CrB,EAAA,CAAA4B,UAAA,mBAAAC,iDAAA;YAAA,OAAST,GAAA,CAAA9B,UAAA,EAAY;UAAA,EAAC;UAAsBU,EAAA,CAAAsB,MAAA,cAAM;UAIrEtB,EAJqE,CAAAuB,YAAA,EAAI,EACvD,EACJ,EACH,EACL;;;UAdIvB,EAAA,CAAA8B,SAAA,EAAsB;UAAtB9B,EAAA,CAAA+B,UAAA,cAAAX,GAAA,CAAA5D,QAAA,CAAsB;UAKqBwC,EAAA,CAAA8B,SAAA,GAAsB;UAAtB9B,EAAA,CAAAgC,gBAAA,YAAAZ,GAAA,CAAAjC,QAAA,CAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}