{"ast":null,"code":"import { CSVRecord } from '../services/CSVModel';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Tournament } from '../services/tournaments';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../crud.service\";\nimport * as i3 from \"../auth-service.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"../snackbar.service\";\nfunction TournamentmakerComponent_div_63_table_3_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\")(5, \"span\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"td\")(8, \"span\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const record_r3 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(record_r3.team);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(record_r3.defender);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(record_r3.striker);\n  }\n}\nfunction TournamentmakerComponent_div_63_table_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 22)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Team \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Defender \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Striker \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"tbody\");\n    i0.ɵɵtemplate(10, TournamentmakerComponent_div_63_table_3_tr_10_Template, 10, 3, \"tr\", 23);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.records);\n  }\n}\nfunction TournamentmakerComponent_div_63_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"input\", 20, 0);\n    i0.ɵɵlistener(\"change\", function TournamentmakerComponent_div_63_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.uploadListener($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, TournamentmakerComponent_div_63_table_3_Template, 11, 1, \"table\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.records.length > 0);\n  }\n}\nexport let TournamentmakerComponent = /*#__PURE__*/(() => {\n  class TournamentmakerComponent {\n    constructor(fb, crudService, auth, router, _snackBar) {\n      this.fb = fb;\n      this.crudService = crudService;\n      this.auth = auth;\n      this.router = router;\n      this._snackBar = _snackBar;\n      this.records = [];\n      this.tournamentControl = new FormControl('', [Validators.required]);\n      this.tournamentForm = fb.group({\n        Name: ['', Validators.required],\n        Type: ['', Validators.required],\n        Limit: [0, Validators.required]\n      });\n    }\n    ngOnInit() {}\n    createTournament() {\n      let t = new Tournament(null, true, this.name, this.auth.userData.uid, this.type);\n      if (this.records == null) {\n        var role = this.auth.extraData != undefined ? this.auth.extraData.preferredRole : \"Any\";\n        var u = {\n          name: this.auth.userData.displayName,\n          uid: this.auth.userData.uid,\n          role: role\n        };\n        t.users.push(u);\n      } else {\n        var role = \"Admin\";\n        var u = {\n          name: this.auth.userData.displayName,\n          uid: this.auth.userData.uid,\n          role: role\n        };\n        t.users.push(u);\n        var count = 0;\n        this.records.forEach(line => {\n          count++;\n          var def = {\n            name: line.defender,\n            role: \"Defender\",\n            uid: count + \"def\"\n          };\n          var str = {\n            name: line.striker,\n            role: \"Striker\",\n            uid: count + \"str\"\n          };\n          var team = {\n            id: line.team + str.uid + def.uid,\n            name: line.team,\n            defenderId: def.uid,\n            strikerId: str.uid,\n            goalFatti: 0,\n            goalSubiti: 0,\n            lost: 0,\n            played: 0,\n            score: 0,\n            win: 0\n          };\n          t.users.push(str);\n          t.users.push(def);\n          t.teams.push(team);\n        });\n      }\n      this.crudService.addInfoToTournament(t).then(resp => {\n        this._snackBar.show('🏆 Tournament created successfully.');\n      }).catch(error => {\n        this._snackBar.show('⚠️ Error: ' + error);\n      });\n      this.router.navigate(['dashboard']);\n    }\n    uploadListener($event) {\n      let text = [];\n      let files = $event.srcElement.files;\n      if (this.isValidCSVFile(files[0])) {\n        let input = $event.target;\n        let reader = new FileReader();\n        reader.readAsText(input.files[0]);\n        reader.onload = () => {\n          let csvData = reader.result;\n          let csvRecordsArray = csvData.split(/\\r\\n|\\n/);\n          let headersRow = this.getHeaderArray(csvRecordsArray);\n          this.records = this.getDataRecordsArrayFromCSVFile(csvRecordsArray, headersRow.length);\n        };\n        reader.onerror = function () {\n          console.log('error is occured while reading file!');\n        };\n      } else {\n        alert(\"Please import valid .csv file.\");\n        this.fileReset();\n      }\n    }\n    getDataRecordsArrayFromCSVFile(csvRecordsArray, headerLength) {\n      let csvArr = [];\n      for (let i = 1; i < csvRecordsArray.length; i++) {\n        let curruntRecord = csvRecordsArray[i].split(',');\n        if (curruntRecord.length == headerLength) {\n          let csvRecord = new CSVRecord();\n          csvRecord.team = curruntRecord[0].trim();\n          csvRecord.defender = curruntRecord[1].trim();\n          csvRecord.striker = curruntRecord[2].trim();\n          csvArr.push(csvRecord);\n        }\n      }\n      return csvArr;\n    }\n    isValidCSVFile(file) {\n      return file.name.endsWith(\".csv\");\n    }\n    getHeaderArray(csvRecordsArr) {\n      let headers = csvRecordsArr[0].split(',');\n      let headerArray = [];\n      for (let j = 0; j < headers.length; j++) {\n        headerArray.push(headers[j]);\n      }\n      return headerArray;\n    }\n    fileReset() {\n      this.csvReader.nativeElement.value = \"\";\n      this.records = [];\n    }\n    static {\n      this.ɵfac = function TournamentmakerComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || TournamentmakerComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CrudService), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.PopupService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: TournamentmakerComponent,\n        selectors: [[\"app-tournamentmaker\"]],\n        decls: 68,\n        vars: 6,\n        consts: [[\"csvReader\", \"\"], [1, \"container\"], [1, \"row\", \"mt-5\"], [1, \"col-lg-2\", \"col-md-2\", \"col-sm\", \"col-xs\"], [1, \"col-lg-8\", \"col-md-8\"], [1, \"text-center\", \"mb-5\"], [1, \"row\"], [1, \"col-lg-3\", \"col-md-3\", \"col-sm-3\", \"col-xs-3\"], [1, \"col-lg-6\", \"col-md-6\", \"col-sm-3\", \"col-xs-3\"], [2, \"width\", \"100%\", 3, \"formGroup\"], [1, \"form-row\", \"justify-content-center\"], [1, \"form-group\", \"col-lg-6\", \"col-md-6\"], [\"for\", \"inputAddress\"], [\"type\", \"text\", \"id\", \"inputAddress\", \"formControlName\", \"Name\", \"mdbInputDirective\", \"\", \"placeholder\", \"Foosball Champions\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"number\", \"id\", \"inputAddress\", \"formControlName\", \"Limit\", \"mdbInputDirective\", \"\", \"placeholder\", \"8\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"formControlName\", \"Type\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [1, \"form-row\", \"justify-content-center\", \"v-flex-container\"], [4, \"ngIf\"], [1, \"text-center\", \"mt-2\", \"mb-5\"], [\"type\", \"submit\", 1, \"btn\", \"btn-dark\", 3, \"click\", \"disabled\"], [\"type\", \"file\", \"name\", \"Upload CSV\", \"id\", \"txtFileUpload\", \"accept\", \".csv\", 3, \"change\"], [\"class\", \"minimalistBlack\", 4, \"ngIf\"], [1, \"minimalistBlack\"], [4, \"ngFor\", \"ngForOf\"]],\n        template: function TournamentmakerComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2);\n            i0.ɵɵelement(2, \"div\", 3);\n            i0.ɵɵelementStart(3, \"div\", 4)(4, \"h2\", 5);\n            i0.ɵɵtext(5, \"- Create a new tournament -\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(6, \"div\", 6);\n            i0.ɵɵelement(7, \"div\", 7);\n            i0.ɵɵelementStart(8, \"div\", 8)(9, \"form\", 9)(10, \"div\", 10)(11, \"div\", 11)(12, \"label\", 12);\n            i0.ɵɵtext(13, \"*Tournament name:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(14, \"input\", 13);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function TournamentmakerComponent_Template_input_ngModelChange_14_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.name, $event) || (ctx.name = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(15, \"div\", 10)(16, \"div\", 11)(17, \"label\", 12);\n            i0.ɵɵtext(18, \"Teams passes:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(19, \"input\", 14);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function TournamentmakerComponent_Template_input_ngModelChange_19_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.limit, $event) || (ctx.limit = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(20, \"div\", 10)(21, \"div\", 11)(22, \"label\", 12);\n            i0.ɵɵtext(23, \"*Type:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(24, \"select\", 15);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function TournamentmakerComponent_Template_select_ngModelChange_24_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.type, $event) || (ctx.type = $event);\n              return $event;\n            });\n            i0.ɵɵelementStart(25, \"option\");\n            i0.ɵɵtext(26, \"Championship\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(27, \"option\");\n            i0.ɵɵtext(28, \"League\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(29, \"option\");\n            i0.ɵɵtext(30, \"Pre-Made\");\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(31, \"div\", 16)(32, \"p\")(33, \"b\");\n            i0.ɵɵtext(34, \"League\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(35, \":\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(36, \"ul\")(37, \"li\");\n            i0.ɵɵtext(38, \"Build teams\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(39, \"li\");\n            i0.ɵɵtext(40, \"Teams' Scoreboard\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(41, \"li\");\n            i0.ɵɵtext(42, \"Players' Scoreboard\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(43, \"p\")(44, \"b\");\n            i0.ɵɵtext(45, \"Championship\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(46, \":\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(47, \"ul\")(48, \"li\");\n            i0.ɵɵtext(49, \"Random teams\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(50, \"li\");\n            i0.ɵɵtext(51, \"Brackets\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(52, \"li\");\n            i0.ɵɵtext(53, \"Random matches\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(54, \"p\")(55, \"b\");\n            i0.ɵɵtext(56, \"Pre-Made\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(57, \":\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(58, \"ul\")(59, \"li\");\n            i0.ɵɵtext(60, \"Teams & users from CSV file\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(61, \"li\");\n            i0.ɵɵtext(62, \"Matches\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵtemplate(63, TournamentmakerComponent_div_63_Template, 4, 1, \"div\", 17);\n            i0.ɵɵelementStart(64, \"div\", 18)(65, \"button\", 19);\n            i0.ɵɵlistener(\"click\", function TournamentmakerComponent_Template_button_click_65_listener() {\n              return ctx.createTournament();\n            });\n            i0.ɵɵtext(66, \"Create\");\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelement(67, \"div\", 7);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(9);\n            i0.ɵɵproperty(\"formGroup\", ctx.tournamentForm);\n            i0.ɵɵadvance(5);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.name);\n            i0.ɵɵadvance(5);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.limit);\n            i0.ɵɵadvance(5);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.type);\n            i0.ɵɵadvance(39);\n            i0.ɵɵproperty(\"ngIf\", ctx.type == \"Pre-Made\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"disabled\", ctx.tournamentForm.invalid);\n          }\n        },\n        encapsulation: 2\n      });\n    }\n  }\n  return TournamentmakerComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}