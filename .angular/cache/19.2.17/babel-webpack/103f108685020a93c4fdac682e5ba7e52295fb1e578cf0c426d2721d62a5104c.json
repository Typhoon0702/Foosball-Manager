{"ast":null,"code":"import { CSVRecord } from '../services/CSVModel';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Tournament } from '../services/tournaments';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../crud.service\";\nimport * as i3 from \"../auth-service.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"../snackbar.service\";\nfunction TournamentmakerComponent_div_63_table_3_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\")(5, \"span\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"td\")(8, \"span\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const record_r3 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(record_r3.team);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(record_r3.defender);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(record_r3.striker);\n  }\n}\nfunction TournamentmakerComponent_div_63_table_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 22)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Team \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Defender \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Striker \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"tbody\");\n    i0.ɵɵtemplate(10, TournamentmakerComponent_div_63_table_3_tr_10_Template, 10, 3, \"tr\", 23);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.records);\n  }\n}\nfunction TournamentmakerComponent_div_63_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"input\", 20, 0);\n    i0.ɵɵlistener(\"change\", function TournamentmakerComponent_div_63_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.uploadListener($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, TournamentmakerComponent_div_63_table_3_Template, 11, 1, \"table\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.records.length > 0);\n  }\n}\nexport class TournamentmakerComponent {\n  constructor(fb, crudService, auth, router, _snackBar) {\n    this.fb = fb;\n    this.crudService = crudService;\n    this.auth = auth;\n    this.router = router;\n    this._snackBar = _snackBar;\n    this.records = [];\n    this.tournamentControl = new FormControl('', [Validators.required]);\n    this.tournamentForm = fb.group({\n      Name: ['', Validators.required],\n      Type: ['', Validators.required],\n      Limit: [0, Validators.required]\n    });\n  }\n  ngOnInit() {}\n  createTournament() {\n    let t = new Tournament(null, true, this.name, this.auth.userData.uid, this.type);\n    if (this.records == null) {\n      var role = this.auth.extraData != undefined ? this.auth.extraData.preferredRole : \"Any\";\n      var u = {\n        name: this.auth.userData.displayName,\n        uid: this.auth.userData.uid,\n        role: role\n      };\n      t.users.push(u);\n    } else {\n      var role = \"Admin\";\n      var u = {\n        name: this.auth.userData.displayName,\n        uid: this.auth.userData.uid,\n        role: role\n      };\n      t.users.push(u);\n      var count = 0;\n      this.records.forEach(line => {\n        count++;\n        var def = {\n          name: line.defender,\n          role: \"Defender\",\n          uid: count + \"def\"\n        };\n        var str = {\n          name: line.striker,\n          role: \"Striker\",\n          uid: count + \"str\"\n        };\n        var team = {\n          id: line.team + str.uid + def.uid,\n          name: line.team,\n          defenderId: def.uid,\n          strikerId: str.uid,\n          goalFatti: 0,\n          goalSubiti: 0,\n          lost: 0,\n          played: 0,\n          score: 0,\n          win: 0\n        };\n        t.users.push(str);\n        t.users.push(def);\n        t.teams.push(team);\n      });\n    }\n    this.crudService.addInfoToTournament(t).then(resp => {\n      this._snackBar.show('🏆 Tournament created successfully.');\n    }).catch(error => {\n      this._snackBar.show('⚠️ Error: ' + error);\n    });\n    this.router.navigate(['dashboard']);\n  }\n  uploadListener($event) {\n    let text = [];\n    let files = $event.srcElement.files;\n    if (this.isValidCSVFile(files[0])) {\n      let input = $event.target;\n      let reader = new FileReader();\n      reader.readAsText(input.files[0]);\n      reader.onload = () => {\n        let csvData = reader.result;\n        let csvRecordsArray = csvData.split(/\\r\\n|\\n/);\n        let headersRow = this.getHeaderArray(csvRecordsArray);\n        this.records = this.getDataRecordsArrayFromCSVFile(csvRecordsArray, headersRow.length);\n      };\n      reader.onerror = function () {\n        console.log('error is occured while reading file!');\n      };\n    } else {\n      alert(\"Please import valid .csv file.\");\n      this.fileReset();\n    }\n  }\n  getDataRecordsArrayFromCSVFile(csvRecordsArray, headerLength) {\n    let csvArr = [];\n    for (let i = 1; i < csvRecordsArray.length; i++) {\n      let curruntRecord = csvRecordsArray[i].split(',');\n      if (curruntRecord.length == headerLength) {\n        let csvRecord = new CSVRecord();\n        csvRecord.team = curruntRecord[0].trim();\n        csvRecord.defender = curruntRecord[1].trim();\n        csvRecord.striker = curruntRecord[2].trim();\n        csvArr.push(csvRecord);\n      }\n    }\n    return csvArr;\n  }\n  isValidCSVFile(file) {\n    return file.name.endsWith(\".csv\");\n  }\n  getHeaderArray(csvRecordsArr) {\n    let headers = csvRecordsArr[0].split(',');\n    let headerArray = [];\n    for (let j = 0; j < headers.length; j++) {\n      headerArray.push(headers[j]);\n    }\n    return headerArray;\n  }\n  fileReset() {\n    this.csvReader.nativeElement.value = \"\";\n    this.records = [];\n  }\n  static {\n    this.ɵfac = function TournamentmakerComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TournamentmakerComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CrudService), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.PopupService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TournamentmakerComponent,\n      selectors: [[\"app-tournamentmaker\"]],\n      decls: 68,\n      vars: 6,\n      consts: [[\"csvReader\", \"\"], [1, \"container\"], [1, \"row\", \"mt-5\"], [1, \"col-lg-2\", \"col-md-2\", \"col-sm\", \"col-xs\"], [1, \"col-lg-8\", \"col-md-8\"], [1, \"text-center\", \"mb-5\"], [1, \"row\"], [1, \"col-lg-3\", \"col-md-3\", \"col-sm-3\", \"col-xs-3\"], [1, \"col-lg-6\", \"col-md-6\", \"col-sm-3\", \"col-xs-3\"], [2, \"width\", \"100%\", 3, \"formGroup\"], [1, \"form-row\", \"justify-content-center\"], [1, \"form-group\", \"col-lg-6\", \"col-md-6\"], [\"for\", \"inputAddress\"], [\"type\", \"text\", \"id\", \"inputAddress\", \"formControlName\", \"Name\", \"mdbInputDirective\", \"\", \"placeholder\", \"Foosball Champions\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"number\", \"id\", \"inputAddress\", \"formControlName\", \"Limit\", \"mdbInputDirective\", \"\", \"placeholder\", \"8\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"formControlName\", \"Type\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [1, \"form-row\", \"justify-content-center\", \"v-flex-container\"], [4, \"ngIf\"], [1, \"text-center\", \"mt-2\", \"mb-5\"], [\"type\", \"submit\", 1, \"btn\", \"btn-dark\", 3, \"click\", \"disabled\"], [\"type\", \"file\", \"name\", \"Upload CSV\", \"id\", \"txtFileUpload\", \"accept\", \".csv\", 3, \"change\"], [\"class\", \"minimalistBlack\", 4, \"ngIf\"], [1, \"minimalistBlack\"], [4, \"ngFor\", \"ngForOf\"]],\n      template: function TournamentmakerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2);\n          i0.ɵɵelement(2, \"div\", 3);\n          i0.ɵɵelementStart(3, \"div\", 4)(4, \"h2\", 5);\n          i0.ɵɵtext(5, \"- Create a new tournament -\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(6, \"div\", 6);\n          i0.ɵɵelement(7, \"div\", 7);\n          i0.ɵɵelementStart(8, \"div\", 8)(9, \"form\", 9)(10, \"div\", 10)(11, \"div\", 11)(12, \"label\", 12);\n          i0.ɵɵtext(13, \"*Tournament name:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"input\", 13);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function TournamentmakerComponent_Template_input_ngModelChange_14_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.name, $event) || (ctx.name = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(15, \"div\", 10)(16, \"div\", 11)(17, \"label\", 12);\n          i0.ɵɵtext(18, \"Teams passes:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"input\", 14);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function TournamentmakerComponent_Template_input_ngModelChange_19_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.limit, $event) || (ctx.limit = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(20, \"div\", 10)(21, \"div\", 11)(22, \"label\", 12);\n          i0.ɵɵtext(23, \"*Type:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"select\", 15);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function TournamentmakerComponent_Template_select_ngModelChange_24_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.type, $event) || (ctx.type = $event);\n            return $event;\n          });\n          i0.ɵɵelementStart(25, \"option\");\n          i0.ɵɵtext(26, \"Championship\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"option\");\n          i0.ɵɵtext(28, \"League\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"option\");\n          i0.ɵɵtext(30, \"Pre-Made\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(31, \"div\", 16)(32, \"p\")(33, \"b\");\n          i0.ɵɵtext(34, \"League\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(35, \":\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(36, \"ul\")(37, \"li\");\n          i0.ɵɵtext(38, \"Build teams\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(39, \"li\");\n          i0.ɵɵtext(40, \"Teams' Scoreboard\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(41, \"li\");\n          i0.ɵɵtext(42, \"Players' Scoreboard\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(43, \"p\")(44, \"b\");\n          i0.ɵɵtext(45, \"Championship\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(46, \":\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(47, \"ul\")(48, \"li\");\n          i0.ɵɵtext(49, \"Random teams\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(50, \"li\");\n          i0.ɵɵtext(51, \"Brackets\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(52, \"li\");\n          i0.ɵɵtext(53, \"Random matches\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(54, \"p\")(55, \"b\");\n          i0.ɵɵtext(56, \"Pre-Made\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(57, \":\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(58, \"ul\")(59, \"li\");\n          i0.ɵɵtext(60, \"Teams & users from CSV file\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(61, \"li\");\n          i0.ɵɵtext(62, \"Matches\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(63, TournamentmakerComponent_div_63_Template, 4, 1, \"div\", 17);\n          i0.ɵɵelementStart(64, \"div\", 18)(65, \"button\", 19);\n          i0.ɵɵlistener(\"click\", function TournamentmakerComponent_Template_button_click_65_listener() {\n            return ctx.createTournament();\n          });\n          i0.ɵɵtext(66, \"Create\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelement(67, \"div\", 7);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"formGroup\", ctx.tournamentForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.name);\n          i0.ɵɵadvance(5);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.limit);\n          i0.ɵɵadvance(5);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.type);\n          i0.ɵɵadvance(39);\n          i0.ɵɵproperty(\"ngIf\", ctx.type == \"Pre-Made\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.tournamentForm.invalid);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["CSVRecord","FormControl","Validators","Tournament","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","record_r3","team","defender","striker","ɵɵtemplate","TournamentmakerComponent_div_63_table_3_tr_10_Template","ɵɵproperty","ctx_r1","records","ɵɵlistener","TournamentmakerComponent_div_63_Template_input_change_1_listener","$event","ɵɵrestoreView","_r1","ɵɵnextContext","ɵɵresetView","uploadListener","TournamentmakerComponent_div_63_table_3_Template","length","TournamentmakerComponent","constructor","fb","crudService","auth","router","_snackBar","tournamentControl","required","tournamentForm","group","Name","Type","Limit","ngOnInit","createTournament","t","name","userData","uid","type","role","extraData","undefined","preferredRole","u","displayName","users","push","count","forEach","line","def","str","id","defenderId","strikerId","goalFatti","goalSubiti","lost","played","score","win","teams","addInfoToTournament","then","resp","show","catch","error","navigate","text","files","srcElement","isValidCSVFile","input","target","reader","FileReader","readAsText","onload","csvData","result","csvRecordsArray","split","headersRow","getHeaderArray","getDataRecordsArrayFromCSVFile","onerror","console","log","alert","fileReset","headerLength","csvArr","i","curruntRecord","csvRecord","trim","file","endsWith","csvRecordsArr","headers","headerArray","j","csvReader","nativeElement","value","ɵɵdirectiveInject","i1","FormBuilder","i2","CrudService","i3","AuthService","i4","Router","i5","PopupService","selectors","decls","vars","consts","template","TournamentmakerComponent_Template","rf","ctx","ɵɵelement","ɵɵtwoWayListener","TournamentmakerComponent_Template_input_ngModelChange_14_listener","ɵɵtwoWayBindingSet","TournamentmakerComponent_Template_input_ngModelChange_19_listener","limit","TournamentmakerComponent_Template_select_ngModelChange_24_listener","TournamentmakerComponent_div_63_Template","TournamentmakerComponent_Template_button_click_65_listener","ɵɵtwoWayProperty","invalid"],"sources":["D:\\Documents\\GitHub\\Foosball-Manager#\\src\\app\\tournamentmaker\\tournamentmaker.component.ts","D:\\Documents\\GitHub\\Foosball-Manager#\\src\\app\\tournamentmaker\\tournamentmaker.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { CSVRecord } from '../services/CSVModel';\r\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { AuthService } from '../auth-service.service';\r\nimport { CrudService } from '../crud.service';\r\nimport { Router } from '@angular/router';\r\nimport { Tournament } from '../services/tournaments';\r\nimport { TournamentUser } from '../services/user';\r\nimport { PopupService } from '../snackbar.service';\r\nimport { TeammakerComponent } from '../teammaker/teammaker.component';\r\nimport { Team } from '../services/team';\r\n\r\n@Component({\r\n  selector: 'app-tournamentmaker',\r\n  templateUrl: './tournamentmaker.component.html',\r\n  styleUrls: ['./tournamentmaker.component.scss']\r\n})\r\nexport class TournamentmakerComponent implements OnInit {\r\n  tournamentForm: FormGroup;\r\n  name: string;\r\n  tournament: any;\r\n  type: string;\r\n  limit: number;\r\n  public records: any[] = [];\r\n\r\n  // @ViewChild('csvReader') \r\n  csvReader: any;\r\n\r\n  tournamentControl = new FormControl('', [Validators.required]);\r\n\r\n  constructor(private fb: FormBuilder, private crudService: CrudService, public auth: AuthService, private router: Router, private _snackBar: PopupService) {\r\n    this.tournamentForm = fb.group({\r\n      Name: ['', Validators.required],\r\n      Type: ['', Validators.required],\r\n      Limit: [0, Validators.required],\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  createTournament() {\r\n\r\n    let t: Tournament = new Tournament(null, true, this.name, this.auth.userData.uid, this.type);\r\n\r\n    if (this.records == null) {\r\n      var role = this.auth.extraData != undefined ? this.auth.extraData.preferredRole : \"Any\";\r\n\r\n      var u = {\r\n        name: this.auth.userData.displayName,\r\n        uid: this.auth.userData.uid,\r\n        role: role\r\n      };\r\n      t.users.push(u);\r\n    }\r\n    else {\r\n      var role = \"Admin\";\r\n      var u = {\r\n        name: this.auth.userData.displayName,\r\n        uid: this.auth.userData.uid,\r\n        role: role\r\n      };\r\n      t.users.push(u);\r\n\r\n      var count = 0\r\n      this.records.forEach(line => {\r\n        count++;\r\n        var def: TournamentUser = {\r\n          name: line.defender,\r\n          role: \"Defender\",\r\n          uid: count + \"def\"\r\n        }\r\n        \r\n        var str: TournamentUser = {\r\n          name: line.striker,\r\n          role: \"Striker\",\r\n          uid: count + \"str\"\r\n        }\r\n\r\n        var team: Team = {\r\n          id: line.team + str.uid + def.uid,\r\n          name: line.team,\r\n          defenderId: def.uid,\r\n          strikerId: str.uid,\r\n          goalFatti: 0,\r\n          goalSubiti: 0,\r\n          lost: 0,\r\n          played: 0,\r\n          score: 0,\r\n          win: 0\r\n        }\r\n\r\n        t.users.push(str);\r\n        t.users.push(def);\r\n        t.teams.push(team);\r\n      });\r\n    }\r\n\r\n    this.crudService.addInfoToTournament(t).then(resp => {\r\n      this._snackBar.show('🏆 Tournament created successfully.');\r\n    }).catch(error => {\r\n      this._snackBar.show('⚠️ Error: ' + error);\r\n    });\r\n    this.router.navigate(['dashboard']);\r\n  }\r\n\r\n\r\n\r\n  uploadListener($event: any): void {\r\n\r\n    let text = [];\r\n    let files = $event.srcElement.files;\r\n\r\n    if (this.isValidCSVFile(files[0])) {\r\n\r\n      let input = $event.target;\r\n      let reader = new FileReader();\r\n      reader.readAsText(input.files[0]);\r\n\r\n      reader.onload = () => {\r\n        let csvData = reader.result;\r\n        let csvRecordsArray = (<string>csvData).split(/\\r\\n|\\n/);\r\n\r\n        let headersRow = this.getHeaderArray(csvRecordsArray);\r\n\r\n        this.records = this.getDataRecordsArrayFromCSVFile(csvRecordsArray, headersRow.length);\r\n      };\r\n\r\n      reader.onerror = function () {\r\n        console.log('error is occured while reading file!');\r\n      };\r\n\r\n    } else {\r\n      alert(\"Please import valid .csv file.\");\r\n      this.fileReset();\r\n    }\r\n  }\r\n\r\n  getDataRecordsArrayFromCSVFile(csvRecordsArray: any, headerLength: any) {\r\n    let csvArr = [];\r\n\r\n    for (let i = 1; i < csvRecordsArray.length; i++) {\r\n      let curruntRecord = (<string>csvRecordsArray[i]).split(',');\r\n      if (curruntRecord.length == headerLength) {\r\n        let csvRecord: CSVRecord = new CSVRecord();\r\n        csvRecord.team = curruntRecord[0].trim();\r\n        csvRecord.defender = curruntRecord[1].trim();\r\n        csvRecord.striker = curruntRecord[2].trim();\r\n        csvArr.push(csvRecord);\r\n      }\r\n    }\r\n    return csvArr;\r\n  }\r\n\r\n  isValidCSVFile(file: any) {\r\n    return file.name.endsWith(\".csv\");\r\n  }\r\n\r\n  getHeaderArray(csvRecordsArr: any) {\r\n    let headers = (<string>csvRecordsArr[0]).split(',');\r\n    let headerArray = [];\r\n    for (let j = 0; j < headers.length; j++) {\r\n      headerArray.push(headers[j]);\r\n    }\r\n    return headerArray;\r\n  }\r\n\r\n  fileReset() {\r\n    this.csvReader.nativeElement.value = \"\";\r\n    this.records = [];\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"row mt-5\">\r\n        <div class=\"col-lg-2 col-md-2 col-sm col-xs\">\r\n        </div>\r\n        <div class=\"col-lg-8 col-md-8\">\r\n            <h2 class=\"text-center mb-5\">- Create a new tournament -</h2>\r\n        </div>\r\n    </div>\r\n    \r\n    <div class=\"row\">\r\n        <div class=\"col-lg-3 col-md-3 col-sm-3 col-xs-3\">\r\n        </div>\r\n    \r\n        <div class=\"col-lg-6 col-md-6 col-sm-3 col-xs-3\">\r\n            <form [formGroup]=\"tournamentForm\" style=\"width:100%;\">\r\n                <div class=\"form-row justify-content-center\">\r\n                    <div class=\"form-group col-lg-6 col-md-6\">\r\n                        <label for=\"inputAddress\">*Tournament name:</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"inputAddress\" formControlName=\"Name\" mdbInputDirective\r\n                            placeholder=\"Foosball Champions\" [(ngModel)]=\"name\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-row justify-content-center\">\r\n                    <div class=\"form-group col-lg-6 col-md-6\">\r\n                        <label for=\"inputAddress\">Teams passes:</label>\r\n                        <input type=\"number\" class=\"form-control\" id=\"inputAddress\" formControlName=\"Limit\" mdbInputDirective\r\n                            placeholder=\"8\" [(ngModel)]=\"limit\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-row justify-content-center\">\r\n                    <div class=\"form-group col-lg-6 col-md-6\">\r\n                        <label for=\"inputAddress\">*Type:</label>\r\n                        <select class=\"form-control\" formControlName=\"Type\" [(ngModel)]=\"type\">\r\n                            <option>Championship</option>\r\n                            <option>League</option>\r\n                            <option>Pre-Made</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-row justify-content-center v-flex-container\">\r\n                    <p> <b>League</b>:</p>\r\n                    <ul>\r\n                        <li>Build teams</li>\r\n                        <li>Teams' Scoreboard</li>\r\n                        <li>Players' Scoreboard</li>\r\n                    </ul>\r\n                    <p><b>Championship</b>:</p>\r\n                    <ul>\r\n                        <li>Random teams</li>\r\n                        <li>Brackets</li>\r\n                        <li>Random matches</li>\r\n                    </ul>\r\n                    <p><b>Pre-Made</b>:</p>\r\n                    <ul>\r\n                        <li>Teams & users from CSV file</li>\r\n                        <li>Matches</li>                    \r\n                    </ul>\r\n                </div>\r\n                <div *ngIf=\"type == 'Pre-Made'\">\r\n                    <input type=\"file\" #csvReader name=\"Upload CSV\" id=\"txtFileUpload\" (change)=\"uploadListener($event)\"\r\n                        accept=\".csv\" />\r\n                    <table class=\"minimalistBlack\" *ngIf=\"records.length > 0\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Team </th>\r\n                                <th>Defender </th>\r\n                                <th>Striker </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let record of records;let i = index;\">\r\n                                <td> <span>{{record.team}}</span> </td>\r\n                                <td> <span>{{record.defender}}</span> </td>\r\n                                <td> <span>{{record.striker}}</span> </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n    \r\n                <div class=\"text-center mt-2 mb-5\">\r\n                    <button type=\"submit\" class=\"btn btn-dark\" [disabled]=\"tournamentForm.invalid\"\r\n                        (click)=\"createTournament()\">Create</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    \r\n        <div class=\"col-lg-3 col-md-3 col-sm-3 col-xs-3\">\r\n        </div>\r\n    </div>\r\n</div>"],"mappings":"AACA,SAASA,SAAS,QAAQ,sBAAsB;AAChD,SAAoBC,WAAW,EAAEC,UAAU,QAAqB,gBAAgB;AAIhF,SAASC,UAAU,QAAQ,yBAAyB;;;;;;;;;ICiEfC,EADT,CAAAC,cAAA,SAAkD,SAC1C,WAAO;IAAAD,EAAA,CAAAE,MAAA,GAAe;IAAQF,EAAR,CAAAG,YAAA,EAAO,EAAM;IAClCH,EAAL,CAAAC,cAAA,SAAI,WAAO;IAAAD,EAAA,CAAAE,MAAA,GAAmB;IAAQF,EAAR,CAAAG,YAAA,EAAO,EAAM;IACtCH,EAAL,CAAAC,cAAA,SAAI,WAAO;IAAAD,EAAA,CAAAE,MAAA,GAAkB;IACjCF,EADiC,CAAAG,YAAA,EAAO,EAAM,EACzC;;;;IAHUH,EAAA,CAAAI,SAAA,GAAe;IAAfJ,EAAA,CAAAK,iBAAA,CAAAC,SAAA,CAAAC,IAAA,CAAe;IACfP,EAAA,CAAAI,SAAA,GAAmB;IAAnBJ,EAAA,CAAAK,iBAAA,CAAAC,SAAA,CAAAE,QAAA,CAAmB;IACnBR,EAAA,CAAAI,SAAA,GAAkB;IAAlBJ,EAAA,CAAAK,iBAAA,CAAAC,SAAA,CAAAG,OAAA,CAAkB;;;;;IAT7BT,EAHZ,CAAAC,cAAA,gBAA0D,YAC/C,SACC,SACI;IAAAD,EAAA,CAAAE,MAAA,YAAK;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACdH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,gBAAS;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAClBH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,eAAQ;IAEpBF,EAFoB,CAAAG,YAAA,EAAK,EAChB,EACD;IACRH,EAAA,CAAAC,cAAA,YAAO;IACHD,EAAA,CAAAU,UAAA,KAAAC,sDAAA,kBAAkD;IAM1DX,EADI,CAAAG,YAAA,EAAQ,EACJ;;;;IANuBH,EAAA,CAAAI,SAAA,IAAW;IAAXJ,EAAA,CAAAY,UAAA,YAAAC,MAAA,CAAAC,OAAA,CAAW;;;;;;IAX1Cd,EADJ,CAAAC,cAAA,UAAgC,mBAER;IAD+CD,EAAA,CAAAe,UAAA,oBAAAC,iEAAAC,MAAA;MAAAjB,EAAA,CAAAkB,aAAA,CAAAC,GAAA;MAAA,MAAAN,MAAA,GAAAb,EAAA,CAAAoB,aAAA;MAAA,OAAApB,EAAA,CAAAqB,WAAA,CAAUR,MAAA,CAAAS,cAAA,CAAAL,MAAA,CAAsB;IAAA,EAAC;IAApGjB,EAAA,CAAAG,YAAA,EACoB;IACpBH,EAAA,CAAAU,UAAA,IAAAa,gDAAA,qBAA0D;IAgB9DvB,EAAA,CAAAG,YAAA,EAAM;;;;IAhB8BH,EAAA,CAAAI,SAAA,GAAwB;IAAxBJ,EAAA,CAAAY,UAAA,SAAAC,MAAA,CAAAC,OAAA,CAAAU,MAAA,KAAwB;;;AD5C5E,OAAM,MAAOC,wBAAwB;EAanCC,YAAoBC,EAAe,EAAUC,WAAwB,EAASC,IAAiB,EAAUC,MAAc,EAAUC,SAAuB;IAApI,KAAAJ,EAAE,GAAFA,EAAE;IAAuB,KAAAC,WAAW,GAAXA,WAAW;IAAsB,KAAAC,IAAI,GAAJA,IAAI;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,SAAS,GAATA,SAAS;IAPnI,KAAAjB,OAAO,GAAU,EAAE;IAK1B,KAAAkB,iBAAiB,GAAG,IAAInC,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACmC,QAAQ,CAAC,CAAC;IAG5D,IAAI,CAACC,cAAc,GAAGP,EAAE,CAACQ,KAAK,CAAC;MAC7BC,IAAI,EAAE,CAAC,EAAE,EAAEtC,UAAU,CAACmC,QAAQ,CAAC;MAC/BI,IAAI,EAAE,CAAC,EAAE,EAAEvC,UAAU,CAACmC,QAAQ,CAAC;MAC/BK,KAAK,EAAE,CAAC,CAAC,EAAExC,UAAU,CAACmC,QAAQ;KAC/B,CAAC;EACJ;EAEAM,QAAQA,CAAA,GACR;EAEAC,gBAAgBA,CAAA;IAEd,IAAIC,CAAC,GAAe,IAAI1C,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC2C,IAAI,EAAE,IAAI,CAACb,IAAI,CAACc,QAAQ,CAACC,GAAG,EAAE,IAAI,CAACC,IAAI,CAAC;IAE5F,IAAI,IAAI,CAAC/B,OAAO,IAAI,IAAI,EAAE;MACxB,IAAIgC,IAAI,GAAG,IAAI,CAACjB,IAAI,CAACkB,SAAS,IAAIC,SAAS,GAAG,IAAI,CAACnB,IAAI,CAACkB,SAAS,CAACE,aAAa,GAAG,KAAK;MAEvF,IAAIC,CAAC,GAAG;QACNR,IAAI,EAAE,IAAI,CAACb,IAAI,CAACc,QAAQ,CAACQ,WAAW;QACpCP,GAAG,EAAE,IAAI,CAACf,IAAI,CAACc,QAAQ,CAACC,GAAG;QAC3BE,IAAI,EAAEA;OACP;MACDL,CAAC,CAACW,KAAK,CAACC,IAAI,CAACH,CAAC,CAAC;IACjB,CAAC,MACI;MACH,IAAIJ,IAAI,GAAG,OAAO;MAClB,IAAII,CAAC,GAAG;QACNR,IAAI,EAAE,IAAI,CAACb,IAAI,CAACc,QAAQ,CAACQ,WAAW;QACpCP,GAAG,EAAE,IAAI,CAACf,IAAI,CAACc,QAAQ,CAACC,GAAG;QAC3BE,IAAI,EAAEA;OACP;MACDL,CAAC,CAACW,KAAK,CAACC,IAAI,CAACH,CAAC,CAAC;MAEf,IAAII,KAAK,GAAG,CAAC;MACb,IAAI,CAACxC,OAAO,CAACyC,OAAO,CAACC,IAAI,IAAG;QAC1BF,KAAK,EAAE;QACP,IAAIG,GAAG,GAAmB;UACxBf,IAAI,EAAEc,IAAI,CAAChD,QAAQ;UACnBsC,IAAI,EAAE,UAAU;UAChBF,GAAG,EAAEU,KAAK,GAAG;SACd;QAED,IAAII,GAAG,GAAmB;UACxBhB,IAAI,EAAEc,IAAI,CAAC/C,OAAO;UAClBqC,IAAI,EAAE,SAAS;UACfF,GAAG,EAAEU,KAAK,GAAG;SACd;QAED,IAAI/C,IAAI,GAAS;UACfoD,EAAE,EAAEH,IAAI,CAACjD,IAAI,GAAGmD,GAAG,CAACd,GAAG,GAAGa,GAAG,CAACb,GAAG;UACjCF,IAAI,EAAEc,IAAI,CAACjD,IAAI;UACfqD,UAAU,EAAEH,GAAG,CAACb,GAAG;UACnBiB,SAAS,EAAEH,GAAG,CAACd,GAAG;UAClBkB,SAAS,EAAE,CAAC;UACZC,UAAU,EAAE,CAAC;UACbC,IAAI,EAAE,CAAC;UACPC,MAAM,EAAE,CAAC;UACTC,KAAK,EAAE,CAAC;UACRC,GAAG,EAAE;SACN;QAED1B,CAAC,CAACW,KAAK,CAACC,IAAI,CAACK,GAAG,CAAC;QACjBjB,CAAC,CAACW,KAAK,CAACC,IAAI,CAACI,GAAG,CAAC;QACjBhB,CAAC,CAAC2B,KAAK,CAACf,IAAI,CAAC9C,IAAI,CAAC;MACpB,CAAC,CAAC;IACJ;IAEA,IAAI,CAACqB,WAAW,CAACyC,mBAAmB,CAAC5B,CAAC,CAAC,CAAC6B,IAAI,CAACC,IAAI,IAAG;MAClD,IAAI,CAACxC,SAAS,CAACyC,IAAI,CAAC,qCAAqC,CAAC;IAC5D,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAG;MACf,IAAI,CAAC3C,SAAS,CAACyC,IAAI,CAAC,YAAY,GAAGE,KAAK,CAAC;IAC3C,CAAC,CAAC;IACF,IAAI,CAAC5C,MAAM,CAAC6C,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;EACrC;EAIArD,cAAcA,CAACL,MAAW;IAExB,IAAI2D,IAAI,GAAG,EAAE;IACb,IAAIC,KAAK,GAAG5D,MAAM,CAAC6D,UAAU,CAACD,KAAK;IAEnC,IAAI,IAAI,CAACE,cAAc,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;MAEjC,IAAIG,KAAK,GAAG/D,MAAM,CAACgE,MAAM;MACzB,IAAIC,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC7BD,MAAM,CAACE,UAAU,CAACJ,KAAK,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC;MAEjCK,MAAM,CAACG,MAAM,GAAG,MAAK;QACnB,IAAIC,OAAO,GAAGJ,MAAM,CAACK,MAAM;QAC3B,IAAIC,eAAe,GAAYF,OAAQ,CAACG,KAAK,CAAC,SAAS,CAAC;QAExD,IAAIC,UAAU,GAAG,IAAI,CAACC,cAAc,CAACH,eAAe,CAAC;QAErD,IAAI,CAAC1E,OAAO,GAAG,IAAI,CAAC8E,8BAA8B,CAACJ,eAAe,EAAEE,UAAU,CAAClE,MAAM,CAAC;MACxF,CAAC;MAED0D,MAAM,CAACW,OAAO,GAAG;QACfC,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;MACrD,CAAC;IAEH,CAAC,MAAM;MACLC,KAAK,CAAC,gCAAgC,CAAC;MACvC,IAAI,CAACC,SAAS,EAAE;IAClB;EACF;EAEAL,8BAA8BA,CAACJ,eAAoB,EAAEU,YAAiB;IACpE,IAAIC,MAAM,GAAG,EAAE;IAEf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,eAAe,CAAChE,MAAM,EAAE4E,CAAC,EAAE,EAAE;MAC/C,IAAIC,aAAa,GAAYb,eAAe,CAACY,CAAC,CAAE,CAACX,KAAK,CAAC,GAAG,CAAC;MAC3D,IAAIY,aAAa,CAAC7E,MAAM,IAAI0E,YAAY,EAAE;QACxC,IAAII,SAAS,GAAc,IAAI1G,SAAS,EAAE;QAC1C0G,SAAS,CAAC/F,IAAI,GAAG8F,aAAa,CAAC,CAAC,CAAC,CAACE,IAAI,EAAE;QACxCD,SAAS,CAAC9F,QAAQ,GAAG6F,aAAa,CAAC,CAAC,CAAC,CAACE,IAAI,EAAE;QAC5CD,SAAS,CAAC7F,OAAO,GAAG4F,aAAa,CAAC,CAAC,CAAC,CAACE,IAAI,EAAE;QAC3CJ,MAAM,CAAC9C,IAAI,CAACiD,SAAS,CAAC;MACxB;IACF;IACA,OAAOH,MAAM;EACf;EAEApB,cAAcA,CAACyB,IAAS;IACtB,OAAOA,IAAI,CAAC9D,IAAI,CAAC+D,QAAQ,CAAC,MAAM,CAAC;EACnC;EAEAd,cAAcA,CAACe,aAAkB;IAC/B,IAAIC,OAAO,GAAYD,aAAa,CAAC,CAAC,CAAE,CAACjB,KAAK,CAAC,GAAG,CAAC;IACnD,IAAImB,WAAW,GAAG,EAAE;IACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,OAAO,CAACnF,MAAM,EAAEqF,CAAC,EAAE,EAAE;MACvCD,WAAW,CAACvD,IAAI,CAACsD,OAAO,CAACE,CAAC,CAAC,CAAC;IAC9B;IACA,OAAOD,WAAW;EACpB;EAEAX,SAASA,CAAA;IACP,IAAI,CAACa,SAAS,CAACC,aAAa,CAACC,KAAK,GAAG,EAAE;IACvC,IAAI,CAAClG,OAAO,GAAG,EAAE;EACnB;;;uCAzJWW,wBAAwB,EAAAzB,EAAA,CAAAiH,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAnH,EAAA,CAAAiH,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAArH,EAAA,CAAAiH,iBAAA,CAAAK,EAAA,CAAAC,WAAA,GAAAvH,EAAA,CAAAiH,iBAAA,CAAAO,EAAA,CAAAC,MAAA,GAAAzH,EAAA,CAAAiH,iBAAA,CAAAS,EAAA,CAAAC,YAAA;IAAA;EAAA;;;YAAxBlG,wBAAwB;MAAAmG,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,kCAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UChBjClI,EADJ,CAAAC,cAAA,aAAuB,aACG;UAClBD,EAAA,CAAAoI,SAAA,aACM;UAEFpI,EADJ,CAAAC,cAAA,aAA+B,YACE;UAAAD,EAAA,CAAAE,MAAA,kCAA2B;UAEhEF,EAFgE,CAAAG,YAAA,EAAK,EAC3D,EACJ;UAENH,EAAA,CAAAC,cAAA,aAAiB;UACbD,EAAA,CAAAoI,SAAA,aACM;UAMUpI,EAJhB,CAAAC,cAAA,aAAiD,cACU,eACN,eACC,iBACZ;UAAAD,EAAA,CAAAE,MAAA,yBAAiB;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UACnDH,EAAA,CAAAC,cAAA,iBACwD;UAAnBD,EAAA,CAAAqI,gBAAA,2BAAAC,kEAAArH,MAAA;YAAAjB,EAAA,CAAAuI,kBAAA,CAAAJ,GAAA,CAAAzF,IAAA,EAAAzB,MAAA,MAAAkH,GAAA,CAAAzF,IAAA,GAAAzB,MAAA;YAAA,OAAAA,MAAA;UAAA,EAAkB;UAE/DjB,EAHQ,CAAAG,YAAA,EACwD,EACtD,EACJ;UAGEH,EAFR,CAAAC,cAAA,eAA6C,eACC,iBACZ;UAAAD,EAAA,CAAAE,MAAA,qBAAa;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UAC/CH,EAAA,CAAAC,cAAA,iBACwC;UAApBD,EAAA,CAAAqI,gBAAA,2BAAAG,kEAAAvH,MAAA;YAAAjB,EAAA,CAAAuI,kBAAA,CAAAJ,GAAA,CAAAM,KAAA,EAAAxH,MAAA,MAAAkH,GAAA,CAAAM,KAAA,GAAAxH,MAAA;YAAA,OAAAA,MAAA;UAAA,EAAmB;UAE/CjB,EAHQ,CAAAG,YAAA,EACwC,EACtC,EACJ;UAGEH,EAFR,CAAAC,cAAA,eAA6C,eACC,iBACZ;UAAAD,EAAA,CAAAE,MAAA,cAAM;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UACxCH,EAAA,CAAAC,cAAA,kBAAuE;UAAnBD,EAAA,CAAAqI,gBAAA,2BAAAK,mEAAAzH,MAAA;YAAAjB,EAAA,CAAAuI,kBAAA,CAAAJ,GAAA,CAAAtF,IAAA,EAAA5B,MAAA,MAAAkH,GAAA,CAAAtF,IAAA,GAAA5B,MAAA;YAAA,OAAAA,MAAA;UAAA,EAAkB;UAClEjB,EAAA,CAAAC,cAAA,cAAQ;UAAAD,EAAA,CAAAE,MAAA,oBAAY;UAAAF,EAAA,CAAAG,YAAA,EAAS;UAC7BH,EAAA,CAAAC,cAAA,cAAQ;UAAAD,EAAA,CAAAE,MAAA,cAAM;UAAAF,EAAA,CAAAG,YAAA,EAAS;UACvBH,EAAA,CAAAC,cAAA,cAAQ;UAAAD,EAAA,CAAAE,MAAA,gBAAQ;UAG5BF,EAH4B,CAAAG,YAAA,EAAS,EACpB,EACP,EACJ;UAEEH,EADR,CAAAC,cAAA,eAA8D,SACvD,SAAI;UAAAD,EAAA,CAAAE,MAAA,cAAM;UAAAF,EAAA,CAAAG,YAAA,EAAI;UAAAH,EAAA,CAAAE,MAAA,SAAC;UAAAF,EAAA,CAAAG,YAAA,EAAI;UAElBH,EADJ,CAAAC,cAAA,UAAI,UACI;UAAAD,EAAA,CAAAE,MAAA,mBAAW;UAAAF,EAAA,CAAAG,YAAA,EAAK;UACpBH,EAAA,CAAAC,cAAA,UAAI;UAAAD,EAAA,CAAAE,MAAA,yBAAiB;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAC1BH,EAAA,CAAAC,cAAA,UAAI;UAAAD,EAAA,CAAAE,MAAA,2BAAmB;UAC3BF,EAD2B,CAAAG,YAAA,EAAK,EAC3B;UACFH,EAAH,CAAAC,cAAA,SAAG,SAAG;UAAAD,EAAA,CAAAE,MAAA,oBAAY;UAAAF,EAAA,CAAAG,YAAA,EAAI;UAAAH,EAAA,CAAAE,MAAA,SAAC;UAAAF,EAAA,CAAAG,YAAA,EAAI;UAEvBH,EADJ,CAAAC,cAAA,UAAI,UACI;UAAAD,EAAA,CAAAE,MAAA,oBAAY;UAAAF,EAAA,CAAAG,YAAA,EAAK;UACrBH,EAAA,CAAAC,cAAA,UAAI;UAAAD,EAAA,CAAAE,MAAA,gBAAQ;UAAAF,EAAA,CAAAG,YAAA,EAAK;UACjBH,EAAA,CAAAC,cAAA,UAAI;UAAAD,EAAA,CAAAE,MAAA,sBAAc;UACtBF,EADsB,CAAAG,YAAA,EAAK,EACtB;UACFH,EAAH,CAAAC,cAAA,SAAG,SAAG;UAAAD,EAAA,CAAAE,MAAA,gBAAQ;UAAAF,EAAA,CAAAG,YAAA,EAAI;UAAAH,EAAA,CAAAE,MAAA,SAAC;UAAAF,EAAA,CAAAG,YAAA,EAAI;UAEnBH,EADJ,CAAAC,cAAA,UAAI,UACI;UAAAD,EAAA,CAAAE,MAAA,mCAA2B;UAAAF,EAAA,CAAAG,YAAA,EAAK;UACpCH,EAAA,CAAAC,cAAA,UAAI;UAAAD,EAAA,CAAAE,MAAA,eAAO;UAEnBF,EAFmB,CAAAG,YAAA,EAAK,EACf,EACH;UACNH,EAAA,CAAAU,UAAA,KAAAiI,wCAAA,kBAAgC;UAsB5B3I,EADJ,CAAAC,cAAA,eAAmC,kBAEE;UAA7BD,EAAA,CAAAe,UAAA,mBAAA6H,2DAAA;YAAA,OAAST,GAAA,CAAA3F,gBAAA,EAAkB;UAAA,EAAC;UAACxC,EAAA,CAAAE,MAAA,cAAM;UAGnDF,EAHmD,CAAAG,YAAA,EAAS,EAC9C,EACH,EACL;UAENH,EAAA,CAAAoI,SAAA,cACM;UAEdpI,EADI,CAAAG,YAAA,EAAM,EACJ;;;UA3EYH,EAAA,CAAAI,SAAA,GAA4B;UAA5BJ,EAAA,CAAAY,UAAA,cAAAuH,GAAA,CAAAjG,cAAA,CAA4B;UAKelC,EAAA,CAAAI,SAAA,GAAkB;UAAlBJ,EAAA,CAAA6I,gBAAA,YAAAV,GAAA,CAAAzF,IAAA,CAAkB;UAOnC1C,EAAA,CAAAI,SAAA,GAAmB;UAAnBJ,EAAA,CAAA6I,gBAAA,YAAAV,GAAA,CAAAM,KAAA,CAAmB;UAMazI,EAAA,CAAAI,SAAA,GAAkB;UAAlBJ,EAAA,CAAA6I,gBAAA,YAAAV,GAAA,CAAAtF,IAAA,CAAkB;UA0BxE7C,EAAA,CAAAI,SAAA,IAAwB;UAAxBJ,EAAA,CAAAY,UAAA,SAAAuH,GAAA,CAAAtF,IAAA,eAAwB;UAsBiB7C,EAAA,CAAAI,SAAA,GAAmC;UAAnCJ,EAAA,CAAAY,UAAA,aAAAuH,GAAA,CAAAjG,cAAA,CAAA4G,OAAA,CAAmC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}