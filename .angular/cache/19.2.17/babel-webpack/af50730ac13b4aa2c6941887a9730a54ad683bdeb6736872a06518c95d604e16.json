{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { formatDate } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth-service.service\";\nimport * as i2 from \"../crud.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../snackbar.service\";\nconst _c0 = () => [\"fas\", \"cogs\"];\nconst _c1 = () => [\"fas\", \"plus-circle\"];\nfunction TournamentdetailComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"loading\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TournamentdetailComponent_div_2_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function TournamentdetailComponent_div_2_div_5_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.manageTournament());\n    });\n    i0.ɵɵelement(2, \"fa-icon\", 11);\n    i0.ɵɵtext(3, \" Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function TournamentdetailComponent_div_2_div_5_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.addNewMatch(ctx_r1.id));\n    });\n    i0.ɵɵelement(5, \"fa-icon\", 11);\n    i0.ɵɵtext(6, \" Match \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"icon\", i0.ɵɵpureFunction0(2, _c0));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"icon\", i0.ɵɵpureFunction0(3, _c1));\n  }\n}\nfunction TournamentdetailComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"i\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, TournamentdetailComponent_div_2_div_5_Template, 7, 4, \"div\", 1);\n    i0.ɵɵelement(6, \"div\", 4);\n    i0.ɵɵelementStart(7, \"div\", 5)(8, \"div\", 6);\n    i0.ɵɵelement(9, \"teamlist\", 7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(10, \"div\", 4);\n    i0.ɵɵelementStart(11, \"div\", 5)(12, \"div\", 6);\n    i0.ɵɵelement(13, \"match-calendar\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(14, \"div\", 4);\n    i0.ɵɵelementStart(15, \"div\", 5)(16, \"div\", 6);\n    i0.ɵɵelement(17, \"matchlist\", 9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(18, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\uD83C\\uDFC6 \", ctx_r1.tournament.name, \" \\uD83C\\uDFC6\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Admin: \", ctx_r1.getAdmins(ctx_r1.tournament.admin), \"\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isAdmin == true);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"teams\", ctx_r1.tournament.teams)(\"tournamentId\", ctx_r1.tournament.id);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"calendar\", ctx_r1.matchesToPlay)(\"tournamentId\", ctx_r1.tournament.id);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"matches\", ctx_r1.matches)(\"tournamentId\", ctx_r1.tournament.id);\n  }\n}\nexport class TournamentdetailComponent {\n  constructor(auth, crud, route, router, fb, _snackBar) {\n    this.auth = auth;\n    this.crud = crud;\n    this.route = route;\n    this.router = router;\n    this.fb = fb;\n    this._snackBar = _snackBar;\n    this.roleForm = this.fb.group({\n      PlayerRole: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      this.id = params.id;\n    });\n    this.crud.getTournamentDetail(this.id).subscribe(data => {\n      if (data.payload.exists) {\n        let f = {\n          id: data.payload.id,\n          name: data.payload.data()[\"name\"],\n          teams: data.payload.data()[\"teams\"],\n          matches: data.payload.data()[\"matches\"],\n          users: data.payload.data()[\"users\"],\n          type: data.payload.data()[\"type\"],\n          admin: data.payload.data()[\"admin\"],\n          brackets: data.payload.data()[\"brackets\"]\n        };\n        this.tournament = f;\n        this.matches = this.tournament.matches.filter(m => m.finished);\n        this.matchesToPlay = this.tournament.matches.filter(m => m.finished == false);\n        this.matches.forEach(element => {\n          element.blueTeam = this.tournament.teams.find(t => t.id == element.blueTeamId);\n          element.redTeam = this.tournament.teams.find(t => t.id == element.redTeamId);\n        });\n        if (this.tournament.brackets == null) {\n          var rounds = [];\n          this.brackets = {\n            rounds: rounds\n          };\n        } else this.brackets = this.tournament.brackets;\n      } else {\n        this.router.navigate(['/404']);\n      }\n    });\n  }\n  createNewTeam(tournamentId) {\n    this.router.navigate(['/teammaker'], {\n      queryParams: {\n        id: tournamentId\n      }\n    });\n  }\n  createNewMatch(tournamentId) {\n    this.router.navigate(['/matchmaker'], {\n      queryParams: {\n        id: tournamentId,\n        add: \"false\"\n      }\n    });\n  }\n  addNewMatch(tournamentId) {\n    this.router.navigate(['/matchmaker'], {\n      queryParams: {\n        id: tournamentId,\n        add: \"true\"\n      }\n    });\n  }\n  subscribe() {\n    let newUser = {\n      uid: this.auth.userData.uid,\n      name: this.auth.userData.displayName,\n      role: this.playerRole\n    };\n    this.tournament.users.push(newUser);\n    this.crud.addInfoToTournament(this.tournament).then(resp => {\n      this._snackBar.show('👤 Subscribed successfully.');\n    }).catch(error => {\n      this._snackBar.show('⚠️ Error: ' + error);\n    });\n    this.router.navigate(['/tournament'], {\n      queryParams: {\n        id: this.id\n      }\n    });\n  }\n  Unsubscibe() {\n    let index = this.tournament.users.findIndex(user => user.uid == this.auth.userData.uid);\n    this.tournament.users.splice(index, 1);\n    this.crud.addInfoToTournament(this.tournament).then(resp => {\n      this._snackBar.show('👤 Unsubscribed successfully.');\n    }).catch(error => {\n      this._snackBar.show('⚠️ Error: ' + error);\n    });\n    this.router.navigate(['/tournament'], {\n      queryParams: {\n        id: this.id\n      }\n    });\n  }\n  get isSigned() {\n    let signed = false;\n    if (this.tournament != null) {\n      this.tournament.users.forEach(element => {\n        if (element.uid == this.auth.userData.uid) signed = true;\n      });\n    }\n    return signed;\n  }\n  get isAdmin() {\n    var iA = false;\n    if (this.tournament != null) this.tournament.admin.forEach(id => {\n      if (id == this.auth.userData.uid) {\n        iA = true;\n      }\n    });\n    return iA;\n  }\n  getAdmins(adminsIds) {\n    var admins = [];\n    adminsIds.forEach(id => {\n      admins.push(this.getUserName(id));\n    });\n    return admins;\n  }\n  inThisTeam(t) {\n    return t.strikerId == this.auth.userData.uid || t.defenderId == this.auth.userData.uid;\n  }\n  editTeam(team) {\n    this.router.navigate(['/teammanager'], {\n      queryParams: {\n        tournament: this.tournament.id,\n        team: team.id\n      }\n    });\n  }\n  showMatch(matchid) {\n    this.router.navigate(['/matchmanager'], {\n      queryParams: {\n        tournament: this.tournament.id,\n        match: matchid\n      }\n    });\n  }\n  manageTournament() {\n    this.router.navigate(['/tournament-manager'], {\n      queryParams: {\n        id: this.tournament.id\n      }\n    });\n  }\n  createBrackets() {\n    var emptyMatch = {\n      id: \"\",\n      date: formatDate(new Date(), \"dd MMM yyyy\", 'en'),\n      blueScore: 0,\n      redScore: 0,\n      blueTeamId: \"\",\n      redTeamId: \"\",\n      finished: true\n    };\n    var matchesNumber = 0;\n    if (this.tournament.teams.length % 2 == 0) matchesNumber = this.tournament.teams.length / 2;else {\n      this._snackBar.show(\"Unable to make brackets\");\n      return;\n    }\n    var teams = Object.assign([], this.tournament.teams);\n    var roundsNumber = this.SmallestDivisor(matchesNumber);\n    for (let i = 0; i <= roundsNumber; i++) {\n      var round = {\n        matches: []\n      };\n      if (i == 0) {\n        for (let index = 0; index < matchesNumber; index++) {\n          var t1 = this.random(teams.length);\n          var t2 = this.random(teams.length, t1);\n          var newMatch = {\n            blueTeamId: teams[t1].id,\n            redTeamId: teams[t2].id,\n            blueScore: 0,\n            redScore: 0,\n            finished: true,\n            date: formatDate(new Date(), \"dd MMM yyyy\", 'en'),\n            id: teams[t2].id + teams[t1].id + formatDate(new Date(), \"ddMMyyyyHHmmss\", 'en')\n          };\n          round.matches.push(newMatch);\n          teams.splice(t1, 1);\n          teams.splice(t2, 1);\n        }\n      } else {\n        for (let index = 0; index < matchesNumber; index++) {\n          round.matches.push(emptyMatch);\n        }\n      }\n      this.brackets.rounds.push(round);\n      matchesNumber /= 2;\n    }\n    this.tournament.brackets = this.brackets;\n    this.crud.addInfoToTournament(this.tournament);\n  }\n  createTeams() {\n    var defenders = this.tournament.users.filter(u => u.role == \"Defender\");\n    var strikers = this.tournament.users.filter(u => u.role == \"Striker\");\n    var anys = this.tournament.users.filter(u => u.role == \"Any\");\n    if (defenders.length > 0 && strikers.length > 0) {\n      if (defenders.length != strikers.length) {\n        if (anys.length > 0) {\n          if (defenders.length > strikers.length) {\n            for (let i = 0; i < defenders.length - strikers.length; i++) {\n              if (anys.length > 0) {\n                anys[0].role = \"Striker\";\n                strikers.push(anys[0]);\n                anys.splice(0, 1);\n              }\n            }\n          } else if (defenders.length < strikers.length) {\n            for (let i = 0; i < strikers.length - defenders.length; i++) {\n              if (anys.length > 0) {\n                anys[0].role = \"Defender\";\n                defenders.push(anys[0]);\n                anys.splice(0, 1);\n              }\n            }\n          }\n        } else this._snackBar.show(\"If defenders and strikers number is not the same you need some 'Any' players to fill missing positions\");\n      }\n      if (defenders.length == strikers.length) {\n        console.log(\"Generating...\");\n        var count = 0;\n        this.tournament.teams = [];\n        do {\n          count++;\n          var dIndex = this.random(defenders.length);\n          var sIndex = this.random(strikers.length);\n          var defenderId = defenders[dIndex].uid;\n          var strikerId = strikers[sIndex].uid;\n          var team = {\n            defenderId: defenderId,\n            strikerId: strikerId,\n            goalFatti: 0,\n            goalSubiti: 0,\n            lost: 0,\n            played: 0,\n            name: \"Team\" + count,\n            score: 0,\n            win: 0,\n            id: \"Team\" + count\n          };\n          defenders.splice(dIndex, 1);\n          strikers.splice(sIndex, 1);\n          this.tournament.teams.push(team);\n          console.log(team);\n        } while (defenders.length > 0);\n        console.log(this.tournament);\n        this.crud.addInfoToTournament(this.tournament);\n      }\n    }\n  }\n  getUserName(id) {\n    var player = this.tournament.users.find(u => u.uid == id);\n    if (player != null) return player.name;else return \"N/A\";\n  }\n  getTeamName(id) {\n    var team = this.tournament.teams.find(t => t.id == id);\n    if (team != null) return team.name;else return \"N/A\";\n  }\n  SmallestDivisor(n) {\n    for (let index = 1; index <= n; index++) {\n      if (n % index == 0) return index;\n    }\n  }\n  random(max, d) {\n    if (d != null) {\n      var x = 0;\n      do {\n        x = Math.floor(Math.random() * max);\n      } while (x == d);\n      return x;\n    } else return Math.floor(Math.random() * max);\n  }\n  static {\n    this.ɵfac = function TournamentdetailComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TournamentdetailComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.CrudService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i5.PopupService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TournamentdetailComponent,\n      selectors: [[\"app-tournamentdetail\"]],\n      decls: 3,\n      vars: 2,\n      consts: [[1, \"container\"], [4, \"ngIf\"], [\"class\", \"text-center\", 4, \"ngIf\"], [1, \"text-center\"], [1, \"dropdown-divider\"], [1, \"row\"], [1, \"col-lg-12\", \"col-md-12\", \"justify-content-center\"], [3, \"teams\", \"tournamentId\"], [3, \"calendar\", \"tournamentId\"], [3, \"matches\", \"tournamentId\"], [\"type\", \"button\", 1, \"btn\", \"btn-dark\", 3, \"click\"], [3, \"icon\"]],\n      template: function TournamentdetailComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, TournamentdetailComponent_div_1_Template, 2, 0, \"div\", 1)(2, TournamentdetailComponent_div_2_Template, 19, 9, \"div\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.tournament == null);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.tournament != null);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["Validators","formatDate","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵlistener","TournamentdetailComponent_div_2_div_5_Template_button_click_1_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","manageTournament","ɵɵtext","TournamentdetailComponent_div_2_div_5_Template_button_click_4_listener","addNewMatch","id","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0","_c1","ɵɵtemplate","TournamentdetailComponent_div_2_div_5_Template","ɵɵtextInterpolate1","tournament","name","getAdmins","admin","isAdmin","teams","matchesToPlay","matches","TournamentdetailComponent","constructor","auth","crud","route","router","fb","_snackBar","roleForm","group","PlayerRole","required","ngOnInit","queryParams","subscribe","params","getTournamentDetail","data","payload","exists","f","users","type","brackets","filter","m","finished","forEach","element","blueTeam","find","t","blueTeamId","redTeam","redTeamId","rounds","navigate","createNewTeam","tournamentId","createNewMatch","add","newUser","uid","userData","displayName","role","playerRole","push","addInfoToTournament","then","resp","show","catch","error","Unsubscibe","index","findIndex","user","splice","isSigned","signed","iA","adminsIds","admins","getUserName","inThisTeam","strikerId","defenderId","editTeam","team","showMatch","matchid","match","createBrackets","emptyMatch","date","Date","blueScore","redScore","matchesNumber","length","Object","assign","roundsNumber","SmallestDivisor","i","round","t1","random","t2","newMatch","createTeams","defenders","u","strikers","anys","console","log","count","dIndex","sIndex","goalFatti","goalSubiti","lost","played","score","win","player","getTeamName","n","max","d","x","Math","floor","ɵɵdirectiveInject","i1","AuthService","i2","CrudService","i3","ActivatedRoute","Router","i4","FormBuilder","i5","PopupService","selectors","decls","vars","consts","template","TournamentdetailComponent_Template","rf","ctx","TournamentdetailComponent_div_1_Template","TournamentdetailComponent_div_2_Template"],"sources":["D:\\Documents\\GitHub\\Foosball-Manager#\\src\\app\\tournamentdetail\\tournamentdetail.component.ts","D:\\Documents\\GitHub\\Foosball-Manager#\\src\\app\\tournamentdetail\\tournamentdetail.component.html"],"sourcesContent":["import { Component, OnInit, Inject, ɵConsole } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CrudService } from '../crud.service';\r\nimport { Team } from '../services/team';\r\nimport { AuthService } from '../auth-service.service';\r\nimport { Tournament } from '../services/tournaments';\r\nimport { TournamentUser } from '../services/user';\r\nimport { FormBuilder, Validators, Form, FormGroup } from '@angular/forms';\r\nimport { Match } from '../services/matches';\r\nimport { PopupService } from '../snackbar.service';\r\nimport { Bracket, Round } from '../services/brackets';\r\nimport { formatDate } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-tournamentdetail',\r\n  templateUrl: './tournamentdetail.component.html',\r\n  styleUrls: ['./tournamentdetail.component.scss']\r\n})\r\nexport class TournamentdetailComponent implements OnInit {\r\n\r\n  id: string;\r\n  tournament: Tournament;\r\n  teams: any;\r\n  playerRole: string;\r\n  roleForm: FormGroup;\r\n  match: Match;\r\n  matches: any;\r\n  matchesToPlay: any;\r\n\r\n\r\n  brackets: Bracket;\r\n\r\n\r\n  constructor(public auth: AuthService, private crud: CrudService, private route: ActivatedRoute, private router: Router, public fb: FormBuilder, public _snackBar: PopupService) {\r\n    this.roleForm = this.fb.group({\r\n      PlayerRole: ['', Validators.required]\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams\r\n      .subscribe(params => {\r\n        this.id = params.id;\r\n      });\r\n\r\n    this.crud.getTournamentDetail(this.id).subscribe(data => {\r\n      if (data.payload.exists) {\r\n        let f = {\r\n          id: data.payload.id,\r\n          name: data.payload.data()[\"name\"],\r\n          teams: data.payload.data()[\"teams\"],\r\n          matches: data.payload.data()[\"matches\"],\r\n          users: data.payload.data()[\"users\"],\r\n          type: data.payload.data()[\"type\"],\r\n          admin: data.payload.data()[\"admin\"],\r\n          brackets: data.payload.data()[\"brackets\"]\r\n        };\r\n        this.tournament = f;\r\n        this.matches = this.tournament.matches.filter(m => m.finished);\r\n        this.matchesToPlay = this.tournament.matches.filter(m => m.finished == false);\r\n        this.matches.forEach(element => {\r\n          element.blueTeam = this.tournament.teams.find(t => t.id == element.blueTeamId);\r\n          element.redTeam = this.tournament.teams.find(t => t.id == element.redTeamId);\r\n        });\r\n\r\n        if (this.tournament.brackets == null) {\r\n          var rounds: Round[] = [];\r\n          this.brackets = {\r\n            rounds: rounds,\r\n          }\r\n        }\r\n        else\r\n          this.brackets = this.tournament.brackets;\r\n      }\r\n      else {\r\n        this.router.navigate(['/404']);\r\n      }\r\n    });\r\n  }\r\n\r\n  createNewTeam(tournamentId) {\r\n    this.router.navigate(['/teammaker'], { queryParams: { id: tournamentId } });\r\n  }\r\n\r\n  createNewMatch(tournamentId) {\r\n    this.router.navigate(['/matchmaker'], { queryParams: { id: tournamentId, add: \"false\" } });\r\n  }\r\n\r\n  addNewMatch(tournamentId) {\r\n    this.router.navigate(['/matchmaker'], { queryParams: { id: tournamentId, add: \"true\" } });\r\n  }\r\n\r\n  subscribe() {\r\n    let newUser: TournamentUser = {\r\n      uid: this.auth.userData.uid,\r\n      name: this.auth.userData.displayName,\r\n      role: this.playerRole\r\n    }\r\n    this.tournament.users.push(newUser);\r\n    this.crud.addInfoToTournament(this.tournament).then(resp => {\r\n      this._snackBar.show('👤 Subscribed successfully.');\r\n    }).catch(error => {\r\n      this._snackBar.show('⚠️ Error: ' + error);\r\n    });\r\n    this.router.navigate(['/tournament'], { queryParams: { id: this.id } });\r\n  }\r\n\r\n  Unsubscibe() {\r\n    let index: number = this.tournament.users.findIndex(user => user.uid == this.auth.userData.uid);\r\n\r\n    this.tournament.users.splice(index, 1);\r\n\r\n    this.crud.addInfoToTournament(this.tournament).then(resp => {\r\n      this._snackBar.show('👤 Unsubscribed successfully.');\r\n    }).catch(error => {\r\n      this._snackBar.show('⚠️ Error: ' + error);\r\n    });\r\n    this.router.navigate(['/tournament'], { queryParams: { id: this.id } });\r\n  }\r\n\r\n  get isSigned(): boolean {\r\n    let signed: boolean = false;\r\n    if (this.tournament != null) {\r\n      this.tournament.users.forEach(element => {\r\n        if (element.uid == this.auth.userData.uid)\r\n          signed = true;\r\n      });\r\n    }\r\n    return signed;\r\n  }\r\n\r\n  get isAdmin(): boolean {\r\n    var iA : boolean = false;\r\n    if (this.tournament != null)\r\n      this.tournament.admin.forEach(id => {\r\n        if (id == this.auth.userData.uid) {\r\n          iA = true;\r\n        }\r\n      })\r\n    return iA;\r\n  }\r\n\r\n  getAdmins(adminsIds: string[]): string[] {\r\n    var admins: string[] = [];\r\n    adminsIds.forEach(id => {\r\n      admins.push(this.getUserName(id));\r\n    });\r\n    return admins;\r\n  }\r\n\r\n  inThisTeam(t: Team): boolean {\r\n    return (t.strikerId == this.auth.userData.uid || t.defenderId == this.auth.userData.uid)\r\n  }\r\n\r\n\r\n  editTeam(team) {\r\n    this.router.navigate(['/teammanager'], { queryParams: { tournament: this.tournament.id, team: team.id } })\r\n  }\r\n\r\n  showMatch(matchid) {\r\n    this.router.navigate(['/matchmanager'], { queryParams: { tournament: this.tournament.id, match: matchid } })\r\n  }\r\n\r\n  manageTournament() {\r\n    this.router.navigate(['/tournament-manager'], { queryParams: { id: this.tournament.id } })\r\n  }\r\n\r\n  createBrackets() {\r\n    var emptyMatch: Match = {\r\n      id: \"\",\r\n      date: formatDate(new Date(), \"dd MMM yyyy\", 'en'),\r\n      blueScore: 0,\r\n      redScore: 0,\r\n      blueTeamId: \"\",\r\n      redTeamId: \"\",\r\n      finished: true,\r\n    }\r\n\r\n    var matchesNumber = 0;\r\n    if (this.tournament.teams.length % 2 == 0)\r\n      matchesNumber = this.tournament.teams.length / 2;\r\n    else {\r\n      this._snackBar.show(\"Unable to make brackets\");\r\n      return;\r\n    }\r\n    var teams = Object.assign([], this.tournament.teams);\r\n    var roundsNumber = this.SmallestDivisor(matchesNumber);\r\n    for (let i = 0; i <= roundsNumber; i++) {\r\n      var round: Round = {\r\n        matches: []\r\n      };\r\n      if (i == 0) {\r\n        for (let index = 0; index < matchesNumber; index++) {\r\n          var t1 = this.random(teams.length);\r\n          var t2 = this.random(teams.length, t1);\r\n\r\n          var newMatch: Match = {\r\n            blueTeamId: teams[t1].id,\r\n            redTeamId: teams[t2].id,\r\n            blueScore: 0,\r\n            redScore: 0,\r\n            finished: true,\r\n            date: formatDate(new Date(), \"dd MMM yyyy\", 'en'),\r\n            id: teams[t2].id + teams[t1].id + formatDate(new Date(), \"ddMMyyyyHHmmss\", 'en')\r\n          };\r\n\r\n          round.matches.push(newMatch);\r\n          teams.splice(t1, 1);\r\n          teams.splice(t2, 1);\r\n        }\r\n      }\r\n      else {\r\n        for (let index = 0; index < matchesNumber; index++) {\r\n          round.matches.push(emptyMatch);\r\n        }\r\n      }\r\n      this.brackets.rounds.push(round);\r\n      matchesNumber /= 2;\r\n    }\r\n\r\n    this.tournament.brackets = this.brackets;\r\n    this.crud.addInfoToTournament(this.tournament);\r\n  }\r\n\r\n  createTeams() {\r\n    var defenders = this.tournament.users.filter(u => u.role == \"Defender\");\r\n    var strikers = this.tournament.users.filter(u => u.role == \"Striker\");\r\n    var anys = this.tournament.users.filter(u => u.role == \"Any\");\r\n\r\n    if (defenders.length > 0 && strikers.length > 0) {\r\n      if (defenders.length != strikers.length) {\r\n        if (anys.length > 0) {\r\n          if (defenders.length > strikers.length) {\r\n            for (let i = 0; i < defenders.length - strikers.length; i++) {\r\n              if (anys.length > 0) {\r\n                anys[0].role = \"Striker\";\r\n                strikers.push(anys[0]);\r\n                anys.splice(0, 1);\r\n              }\r\n            }\r\n          }\r\n          else if (defenders.length < strikers.length) {\r\n            for (let i = 0; i < strikers.length - defenders.length; i++) {\r\n              if (anys.length > 0) {\r\n                anys[0].role = \"Defender\";\r\n                defenders.push(anys[0]);\r\n                anys.splice(0, 1);\r\n              }\r\n            }\r\n          }\r\n        }\r\n        else\r\n          this._snackBar.show(\"If defenders and strikers number is not the same you need some 'Any' players to fill missing positions\");\r\n      }\r\n      if (defenders.length == strikers.length) {\r\n        console.log(\"Generating...\");\r\n        var count = 0;\r\n        this.tournament.teams = [];\r\n        do {\r\n          count++;\r\n          var dIndex = this.random(defenders.length);\r\n          var sIndex = this.random(strikers.length)\r\n\r\n          var defenderId = defenders[dIndex].uid;\r\n          var strikerId = strikers[sIndex].uid;\r\n\r\n          var team: Team = {\r\n            defenderId: defenderId,\r\n            strikerId: strikerId,\r\n            goalFatti: 0,\r\n            goalSubiti: 0,\r\n            lost: 0,\r\n            played: 0,\r\n            name: \"Team\" + count,\r\n            score: 0,\r\n            win: 0,\r\n            id: \"Team\" + count\r\n          };\r\n\r\n          defenders.splice(dIndex, 1);\r\n          strikers.splice(sIndex, 1);\r\n\r\n          this.tournament.teams.push(team);\r\n          console.log(team);\r\n        }\r\n        while (defenders.length > 0);\r\n        console.log(this.tournament);\r\n        this.crud.addInfoToTournament(this.tournament);\r\n      }\r\n    }\r\n  }\r\n\r\n  getUserName(id) {\r\n    var player = this.tournament.users.find(u => u.uid == id);\r\n    if (player != null)\r\n      return player.name;\r\n    else\r\n      return \"N/A\";\r\n  }\r\n\r\n  getTeamName(id) {\r\n    var team = this.tournament.teams.find(t => t.id == id);\r\n    if (team != null)\r\n      return team.name;\r\n    else\r\n      return \"N/A\";\r\n  }\r\n\r\n  public SmallestDivisor(n: number) {\r\n    for (let index = 1; index <= n; index++) {\r\n      if (n % index == 0)\r\n        return index;\r\n    }\r\n  }\r\n\r\n  random(max: number, d?: number) {\r\n    if (d != null) {\r\n      var x = 0;\r\n      do {\r\n        x = Math.floor((Math.random() * max));\r\n      }\r\n      while (x == d);\r\n      return x;\r\n    }\r\n    else\r\n      return Math.floor((Math.random() * max));\r\n  }\r\n}","<div class=\"container\">\r\n    <div *ngIf=\"tournament == null\">\r\n        <loading></loading>\r\n    </div>\r\n    <div class=\"text-center\" *ngIf=\"tournament != null\">\r\n        <h2>🏆 {{tournament.name}} 🏆</h2>\r\n        <i>Admin: {{getAdmins(tournament.admin)}}</i>\r\n        <div *ngIf=\"isAdmin == true\">\r\n            <button class=\"btn btn-dark\" type=\"button\" (click)=\"manageTournament()\"><fa-icon [icon]=\"['fas','cogs']\"></fa-icon> Edit</button>\r\n            <button class=\"btn btn-dark\" type=\"button\" (click)=\"addNewMatch(id)\"><fa-icon [icon]=\"['fas','plus-circle']\"></fa-icon> Match </button>\r\n        </div>\r\n\r\n        <div class=\"dropdown-divider\"></div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-12 col-md-12 justify-content-center\">\r\n                <teamlist [teams]=\"tournament.teams\" [tournamentId]=\"tournament.id\"></teamlist>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"dropdown-divider\"></div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-12 col-md-12 justify-content-center\">\r\n                <match-calendar [calendar]=\"matchesToPlay\" [tournamentId]=\"tournament.id\"></match-calendar>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"dropdown-divider\"></div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-12 col-md-12 justify-content-center\">\r\n                <matchlist [matches]=\"matches\" [tournamentId]=\"tournament.id\"></matchlist>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"dropdown-divider\"></div>\r\n\r\n    </div>\r\n</div>\r\n<!-- <div class=\"row\">\r\n        <div class=\"col-lg-4 col-md-4 justify-content-center\"></div>\r\n        <div class=\"col-lg-4 col-md-4 col-sm-12 justify-content-center\">\r\n            <div *ngIf=\"isAdmin === true && isSigned === true\">\r\n                <a class=\"btn-dark btn m-3\" style=\"color:white;\" (click)=\"manageTournament()\">\r\n                    Manage Tournament\r\n                </a>\r\n                <a class=\"btn btn-dark m-3\" style=\"color:white;\"\r\n                    *ngIf=\"tournament.type == 'Championship'  && tournament.teams.length == 0\" (click)=\"createTeams()\">\r\n                    Generate Teams\r\n                </a>\r\n                <a *ngIf=\"tournament.type == 'Championship' && tournament.teams.length > 0 && tournament.brackets == null\"\r\n                    class=\"btn btn-dark m-3\" style=\"color:white;\" (click)=\"createBrackets()\">\r\n                    Generate Brackets\r\n                </a>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-lg-4 col-md-4 justify-content-center\"></div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-4 col-md-4 justify-content-center\"></div>\r\n        <div class=\"col-lg-4 col-md-4 col-sm-12 justify-content-center\">\r\n            <div *ngIf=\"tournament.type == 'League'\">\r\n                <a *ngIf=\"isSigned === true\" class=\"btn btn-dark m-3\" (click)=\"createNewTeam(id)\">\r\n                    New team\r\n                </a>\r\n                <a *ngIf=\"isSigned === true\" class=\"btn btn-dark m-3\" (click)=\"createNewMatch(id)\">\r\n                    New match\r\n                </a>\r\n            </div>\r\n\r\n            <a *ngIf=\"isSigned === true && tournament.type != 'Pre-Made'\" class=\"btn btn-dark m-3\"\r\n                (click)=\"Unsubscibe()\">\r\n                Unsubscibe\r\n            </a>\r\n\r\n            <form [formGroup]=\"roleForm\">\r\n                <select *ngIf=\"isSigned === false && tournament.type !='Pre-Made'\" class=\"form-control\"\r\n                    formControlName=\"PlayerRole\" [(ngModel)]=\"playerRole\">\r\n                    <option>Any</option>\r\n                    <option>Striker</option>\r\n                    <option>Defender</option>\r\n                </select>\r\n                <a *ngIf=\"isSigned === false\" class=\"btn btn-dark m-3\" (click)=\"subscribe()\">\r\n                    Subscribe\r\n                </a>\r\n            </form>\r\n        </div>\r\n        <div class=\"col-lg-4 col-md-4 justify-content-center\"></div>\r\n    </div> -->"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}