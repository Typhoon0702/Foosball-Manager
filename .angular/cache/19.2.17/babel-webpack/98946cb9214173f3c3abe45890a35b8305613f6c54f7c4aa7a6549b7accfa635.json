{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nlet CrudService = class CrudService {\n  constructor(firestore) {\n    this.firestore = firestore;\n  }\n  getTournaments() {\n    return this.firestore.collection(\"tournaments\").snapshotChanges();\n  }\n  getTournamentDetail(tId) {\n    return this.firestore.collection(\"tournaments\").doc(tId).snapshotChanges();\n  }\n  getPlayerData(userId) {\n    return this.firestore.collection(\"userData\").doc(userId).snapshotChanges();\n  }\n  setPlayerData(userId, user) {\n    return this.firestore.collection(\"userData\").doc(userId).set(user);\n  }\n  addInfoToTournament(tournament) {\n    return this.firestore.collection(\"tournaments\").doc(tournament.id).set(tournament);\n  }\n  getAppData() {\n    return this.firestore.collection(\"appdata\").snapshotChanges();\n  }\n  removeTournament(tournament) {\n    return this.firestore.collection(\"tournaments\").doc(tournament.id).delete();\n  }\n};\nCrudService = __decorate([Injectable({\n  providedIn: 'root'\n})], CrudService);\nexport { CrudService };","map":{"version":3,"names":["Injectable","CrudService","constructor","firestore","getTournaments","collection","snapshotChanges","getTournamentDetail","tId","doc","getPlayerData","userId","setPlayerData","user","set","addInfoToTournament","tournament","id","getAppData","removeTournament","delete","__decorate","providedIn"],"sources":["D:\\Documents\\GitHub\\Foosball-Manager#\\src\\app\\crud.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { TournamentUser } from './services/user';\r\nimport { extraUserData } from './services/extraUserData';\r\nimport { Tournament } from './services/tournaments';\r\nimport { AuthService } from './auth-service.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CrudService {\r\n\r\n  constructor(private firestore: AngularFirestore) { }\r\n\r\n  getTournaments() {\r\n    return this.firestore.collection(\"tournaments\").snapshotChanges();\r\n  }\r\n\r\n  getTournamentDetail(tId) {\r\n    return this.firestore.collection(\"tournaments\").doc(tId).snapshotChanges();\r\n  }\r\n\r\n  getPlayerData(userId) {\r\n    return this.firestore.collection(\"userData\").doc(userId).snapshotChanges();\r\n  }\r\n\r\n  setPlayerData(userId, user) {\r\n    return this.firestore.collection(\"userData\").doc(userId).set(user);\r\n  }\r\n\r\n  addInfoToTournament(tournament) {\r\n    return this.firestore.collection(\"tournaments\").doc(tournament.id).set(tournament);\r\n  }\r\n\r\n  getAppData() {\r\n    return this.firestore.collection(\"appdata\").snapshotChanges();\r\n  }\r\n\r\n  removeTournament(tournament) {\r\n    return this.firestore.collection(\"tournaments\").doc(tournament.id).delete();\r\n  }\r\n\r\n  \r\n}\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAUnC,IAAMC,WAAW,GAAjB,MAAMA,WAAW;EAEtBC,YAAoBC,SAA2B;IAA3B,KAAAA,SAAS,GAATA,SAAS;EAAsB;EAEnDC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACD,SAAS,CAACE,UAAU,CAAC,aAAa,CAAC,CAACC,eAAe,EAAE;EACnE;EAEAC,mBAAmBA,CAACC,GAAG;IACrB,OAAO,IAAI,CAACL,SAAS,CAACE,UAAU,CAAC,aAAa,CAAC,CAACI,GAAG,CAACD,GAAG,CAAC,CAACF,eAAe,EAAE;EAC5E;EAEAI,aAAaA,CAACC,MAAM;IAClB,OAAO,IAAI,CAACR,SAAS,CAACE,UAAU,CAAC,UAAU,CAAC,CAACI,GAAG,CAACE,MAAM,CAAC,CAACL,eAAe,EAAE;EAC5E;EAEAM,aAAaA,CAACD,MAAM,EAAEE,IAAI;IACxB,OAAO,IAAI,CAACV,SAAS,CAACE,UAAU,CAAC,UAAU,CAAC,CAACI,GAAG,CAACE,MAAM,CAAC,CAACG,GAAG,CAACD,IAAI,CAAC;EACpE;EAEAE,mBAAmBA,CAACC,UAAU;IAC5B,OAAO,IAAI,CAACb,SAAS,CAACE,UAAU,CAAC,aAAa,CAAC,CAACI,GAAG,CAACO,UAAU,CAACC,EAAE,CAAC,CAACH,GAAG,CAACE,UAAU,CAAC;EACpF;EAEAE,UAAUA,CAAA;IACR,OAAO,IAAI,CAACf,SAAS,CAACE,UAAU,CAAC,SAAS,CAAC,CAACC,eAAe,EAAE;EAC/D;EAEAa,gBAAgBA,CAACH,UAAU;IACzB,OAAO,IAAI,CAACb,SAAS,CAACE,UAAU,CAAC,aAAa,CAAC,CAACI,GAAG,CAACO,UAAU,CAACC,EAAE,CAAC,CAACG,MAAM,EAAE;EAC7E;CAGD;AAjCYnB,WAAW,GAAAoB,UAAA,EAHvBrB,UAAU,CAAC;EACVsB,UAAU,EAAE;CACb,CAAC,C,EACWrB,WAAW,CAiCvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}